{"version":3,"sources":["API/API.js","Admin-app/AdminApp.js","Pages/NoPermission.js","Agent-app/AgentApp.js","Authorities-app/Components/Sidebar.js","Authorities-app/AuthoritiesApp.js","redux/userInfoSlice.js","redux/errorInfoSlice.js","Components/GeneralErrorAlert.js","Pages/Login.js","Pages/Page404.js","User-app/Pages/Chat.js","User-app/Pages/Profile.js","User-app/Pages/Register.js","Components/MyModal.js","User-app/Pages/Report.js","User-app/Pages/SmsVerify.js","User-app/UserApp.js","User-app/Pages/CallHelp.js","Pages/Chatroom.js","Pages/MainWrapper.js","Util/useIsAuthenticated.js","Components/DataGridComponent.js","Authorities-app/Pages/Dashboard.js","Agent-app/EmergencyAssignment.js","App.js","serviceWorkerRegistration.js","redux/store.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","body","contentType","rawResponse","wrap","_context","prev","next","axios","toLowerCase","url","concat","config","api","headers","Accept","Content-Type","Authorization","localStorage","getItem","data","sent","abrupt","stop","_x","_x2","_x3","_x4","apply","this","arguments","send_chat_message","_ref3","_callee3","chatroom_id","_context3","_x5","_x6","get_messages","_ref4","_callee4","additionalParams","params","_args4","_context4","length","undefined","URLSearchParams","toString","_x7","sms_verify","_ref5","_callee5","_context5","_x8","get_table_list","_ref6","_callee6","_context6","get_user_emergencies","_ref7","_callee7","_context7","login","_ref8","_callee8","_context8","_x9","create_emergency","_ref9","_callee9","_context9","_x10","register_customer","_ref10","_callee10","_context10","_x11","get_user_info","_ref11","_callee11","_context11","get_table_data","_ref14","_callee14","searchParams","_context14","_x14","_x15","AdminApp","_useState","useState","_useState2","slicedToArray","tableList","setTableList","useEffect","res","map","table","index","console","log","react_default","createElement","react_router_dom","key","to","name","Fragment","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","react_router","NoPermission","Alert","variant","Heading","Button","onClick","AgentApp","appletName","useLocation","pathname","split","fixed","Item","Sidebar","navigate","useNavigate","icon","routes","_useState3","_useState4","agentsOpen","setAgentsOpen","src","alt","Badge","route","aria-expanded","in","AuthoritiesApp","userInfoSlice","createSlice","initialState","value","reducers","updateUser","state","action","objectSpread","payload","actions","errorInfoSlice","updateError","GeneralErrorAlert","errorInfo","useSelector","dispatch","useDispatch","show","techError","onClose","dismissible","descriptiveError","Login","userInfo","emailValue","setEmailValue","passwordValue","setPasswordValue","removeItem","onSubmit","e","response","userInfoRequest","preventDefault","email","password","setItem","accessToken","pusher","subscribe","bind","Notification","userData","type","t0","message","Form","Group","controlId","Label","Control","placeholder","onChange","target","Text","permission","requestPermission","Page404","Chat","emergencies","setEmergencies","emergenciesArray","emergency","Card","border","style","width","chat_room_id","Header","Body","Title","description","Profile","Register","_useState5","_useState6","phoneNumberValue","setPhoneNumberValue","_useState7","_useState8","firstNameValue","setFirstNameValue","_useState9","_useState10","lastNameValue","setLastNameValue","_useState11","_useState12","dobValue","setDobValue","obj","first_name","last_name","phone_number","password_confirmation","dob","request_id","user","MyModal","props","Modal","assign","size","aria-labelledby","centered","backdrop","keyboard","closeButton","Footer","onHide","emergency_types","require","default","Report","canvasShow","setCanvasShow","modalShow","setModalShow","files","setFiles","emergencyDescription","SetEmergencyDescription","emergencyType","setEmergencyType","_useState13","_useState14","reportError","setReportError","_React$useState","React","lat","lng","_React$useState2","coordinates","_useForm","useForm","register","handleSubmit","_ref2","_callee2","_info","time","formData","_iterator2","_step2","file","info","_context2","Date","FormData","_createForOfIteratorHelper","s","n","done","append","err","f","latitude","longitude","defineProperty","getTime","keys","forEach","Offcanvas","placement","Select","aria-label","elem","nanoid","multiple","SmsVerify","verificationCode","setVerificationCode","errorMsg","setErrorMsg","_useParams","useParams","_onSubmit","requestBody","code","UserApp","CallHelp","Row","Col","LocalPolice_default","LocalFireDepartment_default","LocalHospital_default","Forest_default","Surfing_default","SatelliteAlt_default","Bolt_default","PhonelinkErase_default","Chatroom","messages","setMessages","setMessage","page","perPage","total","paginatationData","setPaginatationData","userName","chatMessage","prevValue","user_name","toConsumableArray","unsubscribe","_fetchMoreData","newParams","current_page","per_page","overflow","display","flexDirection","index_es","dataLength","hasMore","loader","scrollableTarget","inverse","msg","MainWrapper","isAuthenticated","authToken","useIsAuthenticated","setAuthToken","DataGridComponent","columns","setColumns","rows","setRows","setPage","sortModel","setSortModel","tableParams","setTableParams","table_name","isLoading","setIsLoading","meta","parseInt","height","DataGrid","pageSize","rowsPerPageOptions","checkboxSelection","paginationMode","loading","sortingMode","onSortModelChange","model","details","orderBy","field","orderByDirection","sort","onRowClick","rowParams","event","rowCount","onPageChange","Dashboard","FormControl","EmergencyAssignment","Pusher","cluster","encrypted","authEndpoint","auth","App","element","Pages_Login","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","persistConfig","storage","combineReducers","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","store","ReactDOM","render","es","integration_react","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","Service-Worker","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5e34ca5e.chunk.js","sourcesContent":["import config from \"./config.json\";\r\nimport axios from \"axios\";\r\n\r\nconst request = async (method, path, body, contentType) => {\r\n  const rawResponse = await axios({\r\n    method: method.toLowerCase(),\r\n    url: `${config.api}/${path}`,\r\n    headers: {\r\n      Accept: \"*/*\",\r\n      \"Content-Type\": contentType || \"application/json\",\r\n      Authorization: localStorage.getItem(\"authToken\")\r\n        ? \"Bearer \" + localStorage.getItem(\"authToken\")\r\n        : \"\",\r\n    },\r\n    data: body,\r\n  });\r\n  return rawResponse;\r\n};\r\n\r\nconst get_emergencies = async () => {\r\n  return await request(\"get\", \"emergencies\");\r\n};\r\n\r\nconst send_chat_message = async (chatroom_id, body) => {\r\n  return await request(\"post\", `chat_rooms/${chatroom_id}/`, body);\r\n};\r\n\r\nconst get_messages = async (chatroom_id, additionalParams = {}) => {\r\n  const params = new URLSearchParams(additionalParams).toString();\r\n  return await request(\"get\", `chat_rooms/${chatroom_id}/messages?${params}`);\r\n};\r\n\r\nconst sms_verify = async (body) => {\r\n  return await request(\"post\", \"auth/customer/verify\", body);\r\n};\r\n\r\nconst get_table_list = async () => {\r\n  return await request(\"get\", \"admin/tables\");\r\n};\r\n\r\nconst get_user_emergencies = async () => {\r\n  return await request(\"get\", \"user/emergencies\");\r\n};\r\n\r\nconst login = async (body) => {\r\n  return await request(\"post\", \"auth/login\", body);\r\n};\r\nconst create_emergency = async (body) => {\r\n  return await request(\"post\", \"emergencies\", body, \"multipart/form-data\");\r\n};\r\n\r\nconst register_customer = async (data) => {\r\n  return await request(\"post\", \"auth/customer/register\", data);\r\n};\r\n\r\nconst get_user_info = async () => {\r\n  return await request(\"get\", \"user\");\r\n};\r\n\r\n// get the format for agents, emergencies, authorities, or customers (for the updateView.js)\r\nconst get_form_format = async (path) => {\r\n  return await request(\"get\", path);\r\n};\r\n\r\n// this gets the info for agents, emergencies, authorities, or customers (to be used by the custom components)\r\nconst get_detailed_info = async (path) => {\r\n  return await request(\"get\", path);\r\n};\r\nconst get_table_data = async (path, searchParams) => {\r\n  return await request(\"get\", `${path}?${searchParams}`);\r\n};\r\nexport {\r\n  create_emergency,\r\n  login,\r\n  register_customer,\r\n  get_user_info,\r\n  sms_verify,\r\n  get_user_emergencies,\r\n  get_messages,\r\n  send_chat_message,\r\n  get_table_data,\r\n  get_table_list,\r\n  get_detailed_info,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { get_table_list } from \"../API/API\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\n\r\nexport default function AdminApp() {\r\n  const [tableList, setTableList] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      let res = await get_table_list();\r\n      setTableList(\r\n        res.data.data.map((table, index) => {\r\n          console.log(table);\r\n          return (\r\n            <Link key={index} to={`tables/${table.name}`}>\r\n              {`${table.name}`}\r\n            </Link>\r\n          );\r\n        })\r\n      );\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">{tableList}</Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Outlet></Outlet>\r\n    </>\r\n  );\r\n}\r\n","import { Button, Alert } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NoPermission() {\r\n  return (\r\n    <>\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Permission Error!</Alert.Heading>\r\n        <p>\r\n          You don't have permission to view that page, you can press the button\r\n          below to Login or Register!\r\n        </p>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Link to={\"/\"}>\r\n            <Button onClick={() => {}} variant=\"outline-danger\">\r\n              Authenticate me!\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Outlet, Link, useNavigate } from \"react-router-dom\";\r\nimport NoPermission from \"../Pages/NoPermission\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function AgentApp() {\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[2];\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"d-flex flex-column main-area-minus-bot-nav m-auto overflow-auto\">\r\n          <Outlet></Outlet>\r\n        </div>{\" \"}\r\n        {/* bottom navbar */}\r\n        <Navbar\r\n          bg=\"light\"\r\n          expand=\"lg\"\r\n          fixed=\"bottom\"\r\n          className=\"user-bottom-navbar\"\r\n        >\r\n          {/* <Container id=\"bottom-nav-container\"> */}\r\n          <Nav className=\"navbar__item__container\" id=\"change-flex-to-row\">\r\n            <Nav.Item\r\n              className={\r\n                (!appletName ? \"nav__item__active\" : \"\") + \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (!appletName ? \"bi-house-fill\" : \"bi-house\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"chat\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"chat\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"chat\"\r\n                      ? \"bi-chat-left-dots-fill\"\r\n                      : \"bi-chat-left-dots\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"profile\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"profile\"} className=\"link__dark\">\r\n                <i className=\"bi bi-person-circle fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"call-help\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"call-help\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"call-help\" ? \"bi-upload\" : \"bi-upload\") +\r\n                    \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"nav__item\">\r\n              {/* remember that I implemented logout just by rerouting to login page */}\r\n              <Link to={\"/\"} className=\"link__dark\">\r\n                <i className=\"bi bi-box-arrow-right fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {/* </Container> */}\r\n        </Navbar>{\" \"}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Collapse, Badge } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Sidebar() {\r\n  let navigate = useNavigate();\r\n  const [routes, setRoutes] = useState([\r\n    {\r\n      name: \"New Reports\",\r\n      path: \"\",\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n    { name: \"Archive\", path: \"archive\", icon: \"bi bi-inboxes\" },\r\n  ]);\r\n  const [agentsOpen, setAgentsOpen] = useState(false);\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <div className=\"sidebar__main__content\">\r\n        <div className=\"logo__container\">\r\n          <img className=\"logo__image\" src=\"/Images/logo-svg.svg\" alt=\"\" />\r\n          <div className=\"logo__text\">YARDIM</div>\r\n        </div>\r\n        <div className=\"username__container d-flex align-items-center\">\r\n          <Badge className=\"username__avatar\" bg=\"primary\">\r\n            AA\r\n          </Badge>\r\n          <div>Admin Adminson</div>\r\n        </div>\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">PAGES</div>\r\n        </div>\r\n        {routes.map((route, index) => (\r\n          <Link\r\n            to={route.path}\r\n            className={\r\n              (route.path === appletName ||\r\n              (route.path === \"\" && appletName === \"authority\")\r\n                ? \"sidebar__link__active\"\r\n                : \"\") + \" sidebar__link d-flex\"\r\n            }\r\n            key={index}\r\n          >\r\n            <i className={route.icon + \" sidebar__link__icon\"}></i>\r\n            <div>{`${route.name}`}</div>\r\n          </Link>\r\n        ))}\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">AGENT OPERATIONS</div>\r\n        </div>\r\n        <div\r\n          onClick={() => setAgentsOpen(!agentsOpen)}\r\n          aria-expanded={agentsOpen}\r\n          aria-controls=\"sidebar__agents__collapse\"\r\n          className={\r\n            (agentsOpen ? \"sidebar__link__collapse__toggle__open\" : \"\") +\r\n            \" sidebar__link d-flex align-items-center\"\r\n          }\r\n        >\r\n          <i className=\"bi bi-exclamation-circle sidebar__link__icon\"></i>\r\n          <div>Agents</div>\r\n          <i\r\n            className={\r\n              (agentsOpen\r\n                ? \"side__link__arrow__open \"\r\n                : \"side__link__arrow__closed \") +\r\n              \"bi bi-chevron-right sidebar__link__icon side__link__arrow\"\r\n            }\r\n          ></i>\r\n        </div>\r\n        <div className=\"sidebar__link__collapse\">\r\n          <Collapse in={agentsOpen}>\r\n            <div id=\"sidebar__agents__collapse\">\r\n              <Link\r\n                to={\"create-agent\"}\r\n                className=\"sidebar__link d-flex align-items-center\"\r\n              >\r\n                <i className=\"bi bi-circle sidebar__link__icon__circle\"></i>\r\n                <div>Create Agent</div>\r\n              </Link>\r\n              <Link\r\n                to={\"agent-list\"}\r\n                className=\"sidebar__link d-flex align-items-center\"\r\n              >\r\n                <i className=\"bi bi-circle sidebar__link__icon__circle\"></i>\r\n                <div>All Agents</div>\r\n              </Link>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => navigate(\"/\")}\r\n        className=\"logout__area__container d-flex\"\r\n      >\r\n        <i className=\"bi bi-box-arrow-right logout__icon\"></i>\r\n        <div>Logout</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Routes, Route, Link, Outlet } from \"react-router-dom\";\r\nimport { NavDropdown, Tab, Row, Nav, Col } from \"react-bootstrap\";\r\nimport Sidebar from \"./Components/Sidebar\";\r\n\r\nexport default function AuthoritiesApp() {\r\n  return (\r\n    <div className=\"authority__container\">\r\n      <Sidebar></Sidebar>\r\n      <Outlet></Outlet>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userInfoSlice = createSlice({\r\n  name: \"userInfo\",\r\n  initialState: {\r\n    value: {},\r\n  },\r\n  reducers: {\r\n    updateUser: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = { ...state.value, ...action.payload };\r\n      // state.userInfo = { ...state.UserInfo, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updateUser } = userInfoSlice.actions;\r\n\r\nexport default userInfoSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const errorInfoSlice = createSlice({\r\n  name: \"errorInfo\",\r\n  initialState: {\r\n    value: {\r\n      // this is the format I am expecting\r\n      // techError: \"\",\r\n      // descriptiveError: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    updateError: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updateError } = errorInfoSlice.actions;\r\n\r\nexport default errorInfoSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// techError == error.message\r\n// descriptiveError == error.data.data\r\n\r\nexport default function GeneralErrorAlert() {\r\n  const errorInfo = useSelector((state) => state.errorInfo.value);\r\n  const dispatch = useDispatch();\r\n\r\n  // @TODO: try to elemenate the use of extra state and trigger rerendering on redux state change. (Hint, it is prolly immutability of state changing in reducer)\r\n  // useEffect(() => {\r\n  //   // somehow the component doesnt rerender when the redux state changes???\r\n  //   console.log(\"component re-rendered\");\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   console.log(\"error Info changed: \", errorInfo);\r\n  // }, [errorInfo]);\r\n  return (\r\n    <Alert\r\n      show={errorInfo.techError != undefined}\r\n      variant=\"danger\"\r\n      onClose={() => dispatch(updateError({}))}\r\n      dismissible\r\n    >\r\n      <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n      <p>{`${errorInfo.techError}, ${errorInfo.descriptiveError} `}</p>\r\n    </Alert>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { login, get_user_info } from \"../API/API\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser } from \"../redux/userInfoSlice\";\r\nimport GeneralErrorAlert from \"../Components/GeneralErrorAlert\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport config from \"../API/config.json\";\r\nimport { pusher } from \"../App\";\r\n\r\nfunction Login() {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // this way any component can just reroute to login to \"logout\"\r\n    localStorage.removeItem(\"authToken\");\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let response = await login({\r\n        email: emailValue,\r\n        password: passwordValue,\r\n      });\r\n      response = response.data;\r\n      console.log(\"this is the response: \", response);\r\n      localStorage.setItem(\"authToken\", response.accessToken);\r\n      let userInfoRequest = await get_user_info();\r\n\r\n      userInfoRequest = userInfoRequest.data;\r\n      dispatch(updateUser(userInfoRequest.data));\r\n\r\n      const notification = pusher.subscribe(\r\n        `private-notification.${userInfo.id}`\r\n      );\r\n      notification.bind(\"notification\", (data) => {\r\n        console.log(\"I am insideeeee\");\r\n        console.log(\"bind data \", data);\r\n        let notification = new Notification(\"Message\", {\r\n          body: \"this finally worked\",\r\n          icon: \"/Images/logo-svg.svg\",\r\n        });\r\n      });\r\n      navigate(`/${response.userData.type}/`);\r\n\r\n      console.log(\"Login was Successful\");\r\n    } catch (error) {\r\n      console.log(\"unsuccesful Login Attempt \", error);\r\n      dispatch(\r\n        updateError({\r\n          techError: error.message,\r\n          descriptiveError: error.response.data.data,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login__parent__container\">\r\n      <div className=\"login__container\">\r\n        <img src=\"/Images/logo-svg.svg\" alt=\"\" className=\"logo\" />\r\n        <div className=\"login__form__container\">\r\n          <div className=\"main__header\">\r\n            <h1 className=\"main__header__title\">Login</h1>\r\n            <p className=\"main-header__text\">\r\n              Enter your login details to sign in to your account\r\n            </p>\r\n          </div>\r\n\r\n          <Form className=\"form\" onSubmit={onSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"form__label\">Email address</Form.Label>\r\n              <Form.Control\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={emailValue}\r\n                onChange={(e) => setEmailValue(e.target.value)}\r\n              />\r\n              <Form.Text className=\"text-muted form__label\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"form__label\">Password</Form.Label>\r\n              <Form.Control\r\n                className=\"form__input\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              className=\"mb-2 submit__button\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className=\"mb-2 submit__button\"\r\n              variant=\"primary\"\r\n              onClick={(e) => {\r\n                // you can check mdn notification documentation for implementation details\r\n                console.log(Notification.permission);\r\n\r\n                Notification.requestPermission();\r\n\r\n                if (Notification.permission === \"granted\") {\r\n                  console.log(\"notification access is granted\");\r\n                }\r\n              }}\r\n            >\r\n              Get Notifications\r\n            </Button>\r\n          </Form>\r\n          <Link to={\"/user/register\"} className=\"link__register\">\r\n            <p>Register a New User</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nexport default function Page404() {\r\n  return <div>Page 404</div>;\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { get_user_emergencies } from \"../../API/API\";\r\n\r\nexport default function Chat() {\r\n  let navigate = useNavigate();\r\n  const [emergencies, setEmergencies] = useState([]);\r\n  // @TODO: Refactor this\r\n  useEffect(() => {\r\n    (async () => {\r\n      let request = await get_user_emergencies();\r\n      setEmergencies(request.data.data);\r\n      console.log(request.data.data);\r\n    })();\r\n  }, []);\r\n\r\n  let emergenciesArray = emergencies.map((emergency) => {\r\n    return (\r\n      <Card\r\n        key={emergency.id}\r\n        border=\"dark\"\r\n        style={{ width: \"18rem\" }}\r\n        onClick={(e) => {\r\n          navigate(`/user/chatroom/${emergency.chat_room_id}`);\r\n        }}\r\n      >\r\n        <Card.Header>Emergency Chat Room</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{`Emergency ${emergency.id}`}</Card.Title>\r\n          <Card.Text>{emergency.description}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  });\r\n  return <>{emergenciesArray}</>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Profile() {\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: \"100vw\" }}>\r\n        <Card.Header>User Profile</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{userInfo.name}</Card.Title>\r\n          <hr />\r\n          <dl className=\"row\">\r\n            <dt className=\"col-3\">Email</dt>\r\n            <dd className=\"col-9\">{userInfo.email}</dd>\r\n            <dt className=\"col-3\">Type</dt>\r\n            <dd className=\"col-9\">{userInfo.type}</dd>\r\n          </dl>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { register_customer } from \"../../API/API\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { updateError } from \"../../redux/errorInfoSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\r\n  const [firstNameValue, setFirstNameValue] = useState(\"\");\r\n  const [lastNameValue, setLastNameValue] = useState(\"\");\r\n  const [dobValue, setDobValue] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // code used to set an authtoken for testing purposes\r\n    // localStorage.setItem(\r\n    //   \"authToken\",\r\n    //   \"19|xHyc2VPXG7GS2h1qK0U7rKz0m0PAFQjR5jRYCVpm\"\r\n    // );\r\n  }, []);\r\n  // primary key is \"Email\"\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let obj = {\r\n      first_name: firstNameValue,\r\n      last_name: lastNameValue,\r\n      email: emailValue,\r\n      password: passwordValue,\r\n      phone_number: phoneNumberValue,\r\n      password_confirmation: passwordValue,\r\n      dob: dobValue,\r\n      type: \"user\",\r\n    };\r\n    try {\r\n      let response = await register_customer(obj);\r\n      response = response.data;\r\n      // localStorage.setItem(\"authToken\", response.data.token);\r\n      // console.log(\"response is: \", response);\r\n      // console.log(\"response data is: \", response.data);\r\n      // console.log(\"response request_id is: \", response.data.request_id);\r\n      // console.log(\"response user id is: \", response.data.user.id);\r\n\r\n      navigate(\r\n        `/user/sms-verify/${response.data.request_id}/${response.data.user.id}`\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      dispatch(\r\n        updateError({\r\n          techError: error.message,\r\n          descriptiveError: error.response.data.data,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"general-mobile-container registration-form-container\">\r\n        <h1 className=\"registration-form-title\">Create an Account</h1>\r\n\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={emailValue}\r\n              onChange={(e) => {\r\n                setEmailValue(e.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicFirstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter First Name\"\r\n              value={firstNameValue}\r\n              onChange={(e) => {\r\n                setFirstNameValue(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicLastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Last Name\"\r\n              value={lastNameValue}\r\n              onChange={(e) => setLastNameValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPhoneNumber\">\r\n            <Form.Label>Phone Number</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Phone Number\"\r\n              value={phoneNumberValue}\r\n              onChange={(e) => setPhoneNumberValue(e.target.value)}\r\n            />\r\n            <Form.Text>Make sure the number starts with 90</Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label>Date of Birth</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Enter Date\"\r\n              value={dobValue}\r\n              onChange={(e) => setDobValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nexport default function MyModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Operation Success!\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Your operation was performed successfully. You can now close this\r\n          prompt!\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport LocalFireDepartmentIcon from \"@mui/icons-material/LocalFireDepartment\";\r\nimport MyModal from \"../../Components/MyModal\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Offcanvas,\r\n  Nav,\r\n  Form,\r\n  NavDropdown,\r\n  FormControl,\r\n  Button,\r\n  InputGroup,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { create_emergency } from \"../../API/API\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst emergency_types = [\"Fire\", \"Medical\", \"Crime\", \"Accidents\", \"Other\"];\r\n\r\nconst axios = require(\"axios\").default;\r\nexport default function Report() {\r\n  const [canvasShow, setCanvasShow] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [emergencyDescription, SetEmergencyDescription] = useState(\"\");\r\n  const [emergencyType, setEmergencyType] = useState(0);\r\n  const [reportError, setReportError] = useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleClose = () => setCanvasShow(false);\r\n  const handleShow = () => setCanvasShow(true);\r\n\r\n  // detials found here: https://www.pluralsight.com/guides/how-to-use-geolocation-call-in-reactjs\r\n  function findCurrentLocation() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      function(position) {\r\n        let newPosition = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        console.log(position);\r\n        setCoordinates(newPosition);\r\n      },\r\n      function(error) {\r\n        setReportError(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(files);\r\n  }, [files]);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const uploadFiles = async () => {\r\n    //details on this implementation found here: https://refine.dev/blog/how-to-multipart-file-upload-with-react-hook-form/\r\n    //details on how to upload multipls files here: https://stackoverflow.com/questions/12989442/uploading-multiple-files-using-formdata\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      console.log(file);\r\n      formData.append(\"files[]\", file);\r\n    }\r\n    const res = await fetch(\"http://localhost:5000/upload-file\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }).then((res) => res.json());\r\n    alert(JSON.stringify(`${res.message}, status: ${res.status}`));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    /* Backend requirements\r\n      img_array,\r\n      latitude,\r\n      longitude,\r\n      description,\r\n      emergency_type_id,\r\n      video,\r\n      sound recording,\r\n      time,\r\n    */\r\n    console.log(e);\r\n\r\n    let time = new Date();\r\n\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      console.log(file);\r\n      formData.append(file.name, file);\r\n    }\r\n    const info = {\r\n      latitude: coordinates.lat,\r\n      longitude: coordinates.lng,\r\n      latitude: 1,\r\n      longitude: 2,\r\n      description: emergencyDescription,\r\n      time: time.getTime(),\r\n      emergency_type_id: emergencyType,\r\n    };\r\n\r\n    Object.keys(info).forEach((key) => {\r\n      formData.append(key, info[key]);\r\n    });\r\n    try {\r\n      await create_emergency(formData);\r\n      // emergency created successfully\r\n      setModalShow(true);\r\n      setCanvasShow(false);\r\n    } catch (error) {\r\n      //error occured\r\n      console.log(error);\r\n      setCanvasShow(false);\r\n      setReportError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <>\r\n        {/* alert to prompt the user to try posting the emergency again */}\r\n        {reportError && (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => setReportError(\"\")}\r\n            dismissible\r\n          >\r\n            <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n            <p>detailed error is: {reportError}</p>\r\n          </Alert>\r\n        )}\r\n        <div className=\"main-content d-flex justify-content-center flex-column align-items-center m-auto\">\r\n          <h1>Emergency Assitance Needed?</h1>\r\n          <h5>Press the button to report an emergency</h5>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleShow}\r\n            className=\"main-content__button\"\r\n          >\r\n            Report an Emergency\r\n          </Button>\r\n        </div>\r\n\r\n        {/* modal to show that you have reported successfully */}\r\n        <MyModal show={modalShow} onHide={() => setModalShow(false)} />\r\n\r\n        {/* offcanvas conatianing the form to submit the emergency */}\r\n        {/* made off canvas bigger i.e. fit the content by adding \"h-auto\"  */}\r\n        <Offcanvas\r\n          show={canvasShow}\r\n          onHide={handleClose}\r\n          placement=\"bottom\"\r\n          className=\"h-auto\"\r\n        >\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Send Report</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            {/* images upload form */}\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Select\r\n                  aria-label=\"Default select example\"\r\n                  value={emergencyType}\r\n                  onChange={(e) => setEmergencyType(e.target.value)}\r\n                >\r\n                  {emergency_types.map((elem, index) => {\r\n                    return (\r\n                      <option key={nanoid()} value={index}>\r\n                        {elem}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n                <Form.Text>Choose the Kind of Emergency</Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  multiple\r\n                  {...register(\"files\")}\r\n                  onChange={(e) => setFiles(e.target.files)}\r\n                />\r\n                <Form.Text>You can Upload Multiple files</Form.Text>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicDescription\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Emergency Description\"\r\n                  value={emergencyDescription}\r\n                  onChange={(e) => SetEmergencyDescription(e.target.value)}\r\n                />\r\n                <Form.Text>Please be as descriptive as possible</Form.Text>\r\n              </Form.Group>\r\n              <Button type=\"submit\">Submit form</Button>\r\n            </Form>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { sms_verify } from \"../../API/API\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport GeneralErrorAlert from \"../../Components/GeneralErrorAlert\";\r\nexport default function SmsVerify() {\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  let { id, request_id } = useParams();\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    let requestBody = {\r\n      request_id: request_id,\r\n      code: verificationCode,\r\n      id,\r\n    };\r\n    try {\r\n      let smsVerificationResponse = await sms_verify(requestBody);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setErrorMsg(\r\n        error.response.data\r\n          ? `${error.message}, ${error.response.data.message}`\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"general-mobile-container sms-verify-container\">\r\n      <GeneralErrorAlert\r\n        errorMsg={errorMsg}\r\n        setErrorMsg={setErrorMsg}\r\n      ></GeneralErrorAlert>\r\n      <img src=\"/Images/logo-svg.svg\" alt=\"\" className=\"logo\" />\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicSmsVerification\">\r\n          <Form.Label>Enter The Code You Recieved</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            placeholder=\"Enter Code\"\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Verify and Sign-up\r\n        </Button>\r\n      </Form>\r\n      {/* remember that now only rerouting to the login is enough to logout (bcz login auto deletes authToken) */}\r\n      <Link className=\"label acct-label\" to=\"/\">\r\n        Cancel\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Outlet, Link, useNavigate } from \"react-router-dom\";\r\nimport NoPermission from \"../Pages/NoPermission\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport useIsAuthenticated from \"../Util/useIsAuthenticated\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function UserApp() {\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[2];\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Outlet></Outlet>\r\n        {/* bottom navbar */}\r\n        <Navbar\r\n          bg=\"light\"\r\n          expand=\"lg\"\r\n          fixed=\"bottom\"\r\n          className=\"user-bottom-navbar w-100\"\r\n        >\r\n          {/* <Container id=\"bottom-nav-container\"> */}\r\n          <Nav className=\"navbar__item__container\" id=\"change-flex-to-row\">\r\n            <Nav.Item\r\n              className={\r\n                (!appletName ? \"nav__item__active\" : \"\") + \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (!appletName ? \"bi-house-fill\" : \"bi-house\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"chat\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"chat\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"chat\"\r\n                      ? \"bi-chat-left-dots-fill\"\r\n                      : \"bi-chat-left-dots\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"profile\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"profile\"} className=\"link__dark\">\r\n                <i className=\"bi bi-person-circle fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"call-help\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"call-help\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"call-help\"\r\n                      ? \"bi-telephone-fill\"\r\n                      : \"bi-telephone\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"nav__item\">\r\n              {/* remember that I implemented logout just by rerouting to login page */}\r\n              <Link to={\"/\"} className=\"link__dark\">\r\n                <i className=\"bi bi-box-arrow-right fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {/* </Container> */}\r\n        </Navbar>{\" \"}\r\n      </>\r\n      )\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport LocalPoliceIcon from \"@mui/icons-material/LocalPolice\";\r\nimport LocalFireDepartmentIcon from \"@mui/icons-material/LocalFireDepartment\";\r\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\r\nimport ForestIcon from \"@mui/icons-material/Forest\";\r\nimport SurfingIcon from \"@mui/icons-material/Surfing\";\r\nimport BoltIcon from \"@mui/icons-material/Bolt\";\r\nimport PhonelinkEraseIcon from \"@mui/icons-material/PhonelinkErase\";\r\nimport SatelliteAltIcon from \"@mui/icons-material/SatelliteAlt\";\r\n\r\nexport default function CallHelp() {\r\n  return (\r\n    <>\r\n      <div className=\"m-auto\">\r\n        <h1 className=\"text-center mb-5\">Emergency Numbers</h1>\r\n        <Container className=\"d-grid justify-content-center\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:155\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalPoliceIcon className=\"emergency-number-icons\"></LocalPoliceIcon>\r\n              </Button>\r\n              <p>Police</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:199\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalFireDepartmentIcon className=\"emergency-number-icons\"></LocalFireDepartmentIcon>\r\n              </Button>\r\n              <p>Fire</p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"gy-5\">\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:112\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalHospitalIcon className=\"emergency-number-icons\"></LocalHospitalIcon>\r\n              </Button>\r\n              <p>Ambulance</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:177\"\r\n                variant=\"secondary\"\r\n              >\r\n                <ForestIcon className=\"emergency-number-icons\"></ForestIcon>\r\n              </Button>\r\n              <p>Forest Fires</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:158\"\r\n                variant=\"secondary\"\r\n              >\r\n                <SurfingIcon className=\"emergency-number-icons\"></SurfingIcon>\r\n              </Button>\r\n              <p>Coast Guard</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:166\"\r\n                variant=\"secondary\"\r\n              >\r\n                <SatelliteAltIcon className=\"emergency-number-icons\"></SatelliteAltIcon>\r\n              </Button>\r\n              <p>Meteorology</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:188\"\r\n                variant=\"secondary\"\r\n              >\r\n                <BoltIcon className=\"emergency-number-icons\"></BoltIcon>\r\n              </Button>\r\n              <p>Electrical Faults</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center\"\r\n                href=\"tel:161\"\r\n                variant=\"secondary\"\r\n              >\r\n                <PhonelinkEraseIcon className=\"emergency-number-icons\"></PhonelinkEraseIcon>\r\n              </Button>\r\n              <p>Phone issues</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { get_messages, send_chat_message } from \"../API/API\";\r\nimport { pusher } from \"../App\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Chatroom() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [paginatationData, setPaginatationData] = useState({\r\n    page: 1,\r\n    perPage: 0,\r\n    total: 0,\r\n  });\r\n  // get user info from redux store\r\n  const userInfo = useSelector((state) => state.userInfo);\r\n  useEffect(() => {\r\n    const channel = pusher.subscribe(`private-chat.${chatroom_id}`);\r\n    channel.bind(\"message\", (data) => {\r\n      console.log(\"I got called\");\r\n      appendMsg(data.user.name, data.chatMessage.message);\r\n    });\r\n    console.log(pusher);\r\n\r\n    return () => {\r\n      pusher.unsubscribe(`chat.${chatroom_id}`);\r\n    };\r\n  }, []);\r\n\r\n  let { chatroom_id } = useParams();\r\n\r\n  function appendMsg(userName, message) {\r\n    setMessages((prevValue) => [\r\n      { user_name: userName, message },\r\n      ...prevValue,\r\n    ]);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    send_chat_message(chatroom_id, { message });\r\n    // commented for now, duplicate messages\r\n    //appendMsg(userInfo.name, message);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    (async () => {\r\n      try {\r\n        let res = await get_messages(chatroom_id);\r\n        res = res.data.data;\r\n        console.log(res);\r\n        setMessages(res.data);\r\n        setPaginatationData({\r\n          page: res.current_page,\r\n          perPage: res.per_page,\r\n          total: res.total,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  async function fetchMoreData() {\r\n    let newParams = {\r\n      ...paginatationData,\r\n      page: paginatationData.page + 1,\r\n    };\r\n    try {\r\n      let res = await get_messages(chatroom_id, newParams);\r\n      res = res.data.data;\r\n      console.log(res);\r\n      setMessages([...messages, ...res.data]);\r\n      setPaginatationData({\r\n        page: res.current_page,\r\n        perPage: res.per_page,\r\n        total: res.total,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"scrollableDiv\"\r\n        style={{\r\n          overflow: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column-reverse\",\r\n        }}\r\n      >\r\n        <InfiniteScroll\r\n          dataLength={messages.length}\r\n          next={fetchMoreData}\r\n          style={{ display: \"flex\", flexDirection: \"column-reverse\" }} //To put endMessage and loader to the top.\r\n          hasMore={messages.length < paginatationData.total}\r\n          loader={<h4>Loading...</h4>}\r\n          scrollableTarget=\"scrollableDiv\"\r\n          inverse={true}\r\n        >\r\n          {messages.map((msg, index) => (\r\n            <div key={index}>{`${msg.user_name}: ${msg.message} ${\r\n              msg.id ? msg.id : index\r\n            }`}</div>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your Msg here\"\r\n            value={message}\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport GeneralErrorAlert from \"../Components/GeneralErrorAlert\";\r\nimport useIsAuthenticated from \"../Util/useIsAuthenticated\";\r\nimport NoPermission from \"./NoPermission\";\r\n\r\nexport default function MainWrapper() {\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const [authToken, setAuthToken] = useState(isAuthenticated);\r\n  useEffect(() => {\r\n    setAuthToken(isAuthenticated);\r\n  }, [isAuthenticated]);\r\n  return (\r\n    <>\r\n      {authToken ? (\r\n        <>\r\n          <GeneralErrorAlert></GeneralErrorAlert>\r\n          <Outlet></Outlet>\r\n        </>\r\n      ) : (\r\n        <NoPermission></NoPermission>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useIsAuthenticated() {\r\n  // I am authenticating by getting the path name and checking if it matches the redux contents\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n  console.log(path);\r\n\r\n  console.log(appletName);\r\n  if (\r\n    appletName === \"\" ||\r\n    appletName === \"login\" ||\r\n    appletName === \"register\" ||\r\n    !appletName\r\n  ) {\r\n    console.log(\"pages that dont require authentication\");\r\n    return true;\r\n  }\r\n\r\n  if (!authToken) {\r\n    console.log(\"user doesnt have an authToken\");\r\n    return false;\r\n  }\r\n\r\n  if (userInfo.type !== appletName) {\r\n    console.log(\"user is trying to access a page he is not allowed to\");\r\n    return false;\r\n  }\r\n\r\n  // return authenticated when it passes all checks\r\n  return true;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { get_table_data } from \"../API/API\";\r\nimport { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function DataGridComponent({ route }) {\r\n  const [columns, setColumns] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [sortModel, setSortModel] = useState({});\r\n  const [tableParams, setTableParams] = useState({\r\n    page: page,\r\n  });\r\n\r\n  let navigate = useNavigate();\r\n  let { table_name } = useParams();\r\n  console.log(table_name);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"i ran\");\r\n    (async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const searchParams = new URLSearchParams({\r\n          ...tableParams,\r\n          page: page,\r\n          ...sortModel,\r\n        }).toString();\r\n        let res = await get_table_data(\r\n          route ? route : table_name,\r\n          searchParams\r\n        );\r\n        setRows(res.data.data);\r\n        console.log(\"NO of Rows \" + res.data.data.length);\r\n        setColumns(res.data.columns);\r\n        setTableParams({\r\n          ...res.data.meta,\r\n          perPage: parseInt(res.data.meta.per_page),\r\n          page: page,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, [page, sortModel, table_name]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100\" style={{ height: \"93%\" }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={15}\r\n          rowsPerPageOptions={[15]}\r\n          checkboxSelection\r\n          paginationMode=\"server\"\r\n          loading={isLoading}\r\n          sortingMode=\"server\"\r\n          onSortModelChange={(model, details) => {\r\n            console.log(\"model\", model);\r\n            console.log(\"details\", details);\r\n            setSortModel({\r\n              orderBy: model[0].field,\r\n              orderByDirection: model[0].sort,\r\n            });\r\n          }}\r\n          onRowClick={(rowParams, event, details) => {\r\n            console.log(\"rowParams\", rowParams);\r\n            navigate(`/${table_name}/${rowParams.id}`);\r\n          }}\r\n          rowCount={tableParams.total}\r\n          onPageChange={(page, details) => {\r\n            setPage(page + 1);\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FormControl, Button } from \"react-bootstrap\";\r\nimport DataGridComponent from \"../../Components/DataGridComponent\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div className=\"dashboard__container\">\r\n      <div className=\"authority__card card__height\">\r\n        <div className=\"d-flex align-items-center mb-3 justify-content-between\">\r\n          <div className=\"authority__card__title\">DASHBOARD</div>\r\n          <div className=\"search__area__container d-flex\">\r\n            <FormControl size=\"sm\"></FormControl>\r\n            <Button\r\n              className=\"table__search__button\"\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <DataGridComponent route={\"emergencies\"}></DataGridComponent>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function EmergencyAssignment() {\r\n  return <div>EmergencyAssignment</div>;\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport AdminApp from \"./Admin-app/AdminApp\";\nimport AgentApp from \"./Agent-app/AgentApp\";\nimport AuthoritiesApp from \"./Authorities-app/AuthoritiesApp\";\nimport Login from \"./Pages/Login\";\nimport Page404 from \"./Pages/Page404\";\nimport Pusher from \"pusher-js\";\nimport config from \"./API/config.json\";\n// import * as PusherPushNotifications from \"@pusher/push-notifications-web\";\n\n// User App pages\nimport Chat from \"../src/User-app/Pages/Chat\";\nimport Profile from \"./User-app/Pages/Profile\";\nimport Register from \"./User-app/Pages/Register\";\nimport Report from \"./User-app/Pages/Report\";\nimport SmsVerify from \"./User-app/Pages/SmsVerify\";\nimport UserApp from \"./User-app/UserApp\";\n\n// Authorities App pages\nimport CallHelp from \"./User-app/Pages/CallHelp\";\nimport Chatroom from \"./Pages/Chatroom\";\nimport MainWrapper from \"./Pages/MainWrapper\";\nimport Dashboard from \"./Authorities-app/Pages/Dashboard\";\n\n// Agent App Pages\nimport EmergencyAssignment from \"./Agent-app/EmergencyAssignment\";\n\n// Admin App Pages\nimport DataGridComponent from \"./Components/DataGridComponent\";\n\nconst pusher = new Pusher(\"f06fc2e0e3a78a7ca79b\", {\n  cluster: \"eu\",\n  encrypted: true,\n  authEndpoint: `${config.api}/pusher/auth`,\n  auth: {\n    headers: {\n      Authorization: localStorage.getItem(\"authToken\")\n        ? \"Bearer \" + localStorage.getItem(\"authToken\")\n        : \"\",\n    },\n  },\n});\n\nfunction App() {\n  useEffect(() => {\n    console.log(\"App rerendered\");\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<MainWrapper></MainWrapper>}>\n            <Route index element={<Login />}></Route>\n            <Route path=\"login\" element={<Login />}></Route>\n            <Route path=\"register\" element={<Register></Register>}></Route>\n            <Route\n              path=\"user/sms-verify/:request_id/:id\"\n              element={<SmsVerify></SmsVerify>}\n            ></Route>\n            <Route path=\"user\" element={<UserApp />}>\n              <Route index element={<Report></Report>}></Route>\n              <Route path=\"profile\" element={<Profile></Profile>}></Route>\n              <Route path=\"call-help\" element={<CallHelp />}></Route>\n              <Route path=\"chat\" element={<Chat></Chat>}></Route>\n              <Route\n                path=\"chatroom/:chatroom_id\"\n                element={<Chatroom></Chatroom>}\n              ></Route>\n              <Route path=\"*\" element={<Page404></Page404>}></Route>\n            </Route>\n\n            <Route path=\"agent\" element={<AgentApp />}>\n              <Route\n                index\n                element={<EmergencyAssignment></EmergencyAssignment>}\n              ></Route>\n              <Route path=\"profile\" element={<Profile></Profile>}></Route>\n              <Route path=\"report\" element={<Report />}></Route>\n              <Route path=\"chat\" element={<Chat></Chat>}></Route>\n              <Route\n                path=\"chatroom/:chatroom_id\"\n                element={<Chatroom></Chatroom>}\n              ></Route>\n              <Route path=\"*\" element={<Page404></Page404>}></Route>\n            </Route>\n            <Route path=\"authority\" element={<AuthoritiesApp />}>\n              <Route index element={<Dashboard></Dashboard>}></Route>\n            </Route>\n            <Route path=\"admin\" element={<AdminApp />}>\n              <Route\n                path=\"tables/:table_name\"\n                element={<DataGridComponent></DataGridComponent>}\n              ></Route>\n            </Route>\n            <Route path=\"*\" element={<Page404></Page404>}></Route>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n\nexport { pusher };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// implementation here: https://dev.to/dawnind/persist-redux-state-with-redux-persist-3k0d\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport errorInfoSlice from \"./errorInfoSlice\";\r\nimport userInfoSlice from \"./userInfoSlice\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  errorInfo: errorInfoSlice,\r\n  userInfo: userInfoSlice,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\n// export default configureStore({\r\n//   reducer: {\r\n//     errorInfo: errorInfoSlice,\r\n//     userInfo: userInfoSlice,\r\n//   },\r\n// });\r\n\r\nexport default configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./styles.css\";\nimport \"./css/main.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// learned how to do the PWA thing from https://www.codica.com/blog/how-to-create-pwa-with-react/#step-1-set-up-a-simple-react-app\n\n// remember that pwa only works in built mode i.e. you have to build the app to see it working\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}