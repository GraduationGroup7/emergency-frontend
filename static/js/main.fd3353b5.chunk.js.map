{"version":3,"sources":["API/config.js","API/API.js","Admin-app/Components/Sidebar.js","Components/UnauthorizedAccess.js","Admin-app/AdminApp.js","Pages/NoPermission.js","Agent-app/AgentApp.js","Authorities-app/Components/Sidebar.js","Authorities-app/AuthoritiesApp.js","Pages/Login.js","redux/userInfoSlice.js","redux/errorInfoSlice.js","redux/successInfoSlice.js","Components/GeneralFeedbackToast.js","Pages/Page404.js","Pages/Chat.js","User-app/Pages/Profile.js","User-app/Pages/Register.js","User-app/Pages/Report.js","User-app/Pages/SmsVerify.js","User-app/UserApp.js","User-app/Pages/CallHelp.js","Pages/Chatroom.js","Pages/MainWrapper.js","Util/useIsAuthenticated.js","Components/DataGridComponent.js","Authorities-app/Pages/Dashboard.js","Components/UpdateView.js","Authorities-app/Pages/AuthorityForm.js","Authorities-app/Pages/ChatList.js","Authorities-app/Pages/AuthorityChatroom.js","Agent-app/pages/EmergencyAssignment.js","Admin-app/pages/AdminDashboard.js","Admin-app/pages/AdminForm.js","App.js","serviceWorkerRegistration.js","redux/store.js","index.js"],"names":["config","api","process","request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","body","contentType","rawResponse","wrap","_context","prev","next","axios","toLowerCase","url","concat","headers","Accept","Content-Type","Authorization","localStorage","getItem","data","sent","abrupt","stop","_x","_x2","_x3","_x4","apply","this","arguments","set_emergency_note","_ref3","_callee3","id","note","_context3","_x5","_x6","get_emergency_note","_ref4","_callee4","_context4","_x7","get_emergency_details","_ref5","_callee5","emergency_id","_context5","_x8","get_agent_emergency_details","_ref6","_callee6","_context6","send_chat_message","_ref8","_callee8","chatroom_id","_context8","_x9","_x10","get_messages","_ref9","_callee9","additionalParams","params","_args9","_context9","length","undefined","URLSearchParams","toString","_x11","get_authority_messages","_ref10","_callee10","_args10","_context10","_x12","sms_verify","_ref11","_callee11","_context11","_x13","get_table_list","_ref12","_callee12","_context12","get_chatrooms","_ref13","_callee13","_context13","_x14","login","_ref14","_callee14","_context14","_x15","create_emergency","_ref15","_callee15","_context15","_x16","create_backup","_ref16","_callee16","_context16","register_customer","_ref17","_callee17","_context17","_x17","bulk_delete","_ref18","_callee18","ids","_context18","_x18","_x19","get_user_info","_ref19","_callee19","_context19","get_backup_file","_ref20","_callee20","fileName","_context20","responseType","then","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","_x20","update_item","_ref21","_callee21","_context21","_x21","_x22","get_mergable_emergencies","_ref22","_callee22","_context22","_x23","get_emergency_types","_ref23","_callee23","_context23","get_form_format","_ref25","_callee25","_context25","_x25","get_table_data","_ref27","_callee27","searchParams","_context27","_x27","_x28","create_from_form","_ref28","_callee28","_context28","_x29","_x30","send_init_message","_ref29","_callee29","_context29","_x31","send_authority_message","_ref30","_callee30","_context30","_x32","_x33","assign_agents","_ref31","_callee31","agent_ids","_context31","_x34","_x35","merge_emergencies","_ref32","_callee32","mainEmergencyId","emergencyIds","_context32","_x36","_x37","update_emergency_form","_ref33","_callee33","_context33","_x38","_x39","Sidebar","tableName","setTableName","navigate","useNavigate","userInfo","useSelector","state","value","_useState","useState","_useState2","slicedToArray","routes","setRoutes","useEffect","res","console","log","_useState3","_useState4","useLocation","pathname","split","react_default","className","src","alt","Badge","bg","name","toUpperCase","map","route","index","onClick","model","key","UnauthorizedAccess","style","fontSize","lineHeight","color","Button","width","AdminApp","Fragment","react_router","context","NoPermission","Alert","variant","Heading","react_router_dom","to","AgentApp","appletName","Navbar","expand","Nav","Item","icon","agentsOpen","setAgentsOpen","aria-expanded","aria-controls","Collapse","in","AuthoritiesApp","Sidebar_Sidebar","pusher","userInfoSlice","createSlice","initialState","reducers","updateUser","action","objectSpread","payload","replaceUser","actions","errorInfoSlice","updateError","successInfoSlice","toggle","GeneralFeedbackToast","errorInfo","successInfo","dispatch","useDispatch","options","onOpen","props","foo","onClose","autoClose","type","toast","TYPE","INFO","hideProgressBar","position","POSITION","TOP_CENTER","pauseOnHover","closeButton","SUCCESS","techError","ERROR","react_toastify_esm","Login","emailValue","setEmailValue","passwordValue","setPasswordValue","removeItem","onSubmit","e","userInfoRequest","preventDefault","email","password","setItem","accessToken","Pusher","cluster","encrypted","authEndpoint","auth","subscribe","bind","Notification","details","title","message","userData","t0","Form","Group","controlId","Label","Control","required","placeholder","onChange","target","Text","marginRight","permission","requestPermission","Page404","Chat","emergencies","setEmergencies","emergenciesArray","emergency","chat_room_id","chat_room_type","agent_name","description","font-size","Profile","disabled","phone_number","Register","_useState5","_useState6","phoneNumberValue","setPhoneNumberValue","_useState7","_useState8","firstNameValue","setFirstNameValue","_useState9","_useState10","lastNameValue","setLastNameValue","_useState11","_useState12","dobValue","setDobValue","obj","first_name","last_name","password_confirmation","dob","token","request_id","user","descriptiveError","block","require","default","Report","canvasShow","setCanvasShow","files","setFiles","emergencyDescription","SetEmergencyDescription","emergencyType","setEmergencyType","emergencyTypes","setEmergencyTypes","_React$useState","React","lat","lng","_React$useState2","coordinates","setCoordinates","emergency_types","_useForm","useForm","register","handleSubmit","time","formData","_iterator2","_step2","file","info","navigator","geolocation","getCurrentPosition","newPosition","coords","latitude","longitude","error","Date","FormData","_createForOfIteratorHelper","s","n","done","append","err","f","getTime","emergency_type_id","keys","forEach","class","Offcanvas","show","onHide","placement","Header","Title","Body","Select","aria-label","elem","nanoid","assign","multiple","SmsVerify","verificationCode","setVerificationCode","setErrorMsg","_useParams","useParams","_onSubmit","requestBody","code","UserApp","CallHelp","Container","Row","Col","backgroundColor","borderColor","LocalPolice_default","LocalFireDepartment_default","LocalHospital_default","Forest_default","Surfing_default","SatelliteAlt_default","Bolt_default","PhonelinkErase_default","Chatroom","chatRoomType","_useSearchParams","useSearchParams","_useSearchParams2","messages","setMessages","setMessage","page","perPage","total","paginatationData","setPaginatationData","get","appendMsg","chatMessage","unsubscribe","userId","prevValue","user_id","user_name","toConsumableArray","_fetchMoreData","_callee2","_context2","current_page","per_page","t1","overflow","display","flexDirection","flex","index_es","dataLength","hasMore","loader","scrollableTarget","inverse","msg","padding","MainWrapper","isAuthenticated","authToken","formType","useIsAuthenticated","setAuthToken","DataGridComponent","table_name","setSelectedRows","selectedRows","emergencyId","disableOnRowSelect","columns","setColumns","rows","setRows","setPage","sortModel","setSortModel","tableParams","setTableParams","isLoading","setIsLoading","modifiedCols","column","meta","parseInt","_useState13","_useState14","rowCountState","setRowCountState","prevRowCountState","height","DataGrid","pageSize","rowsPerPageOptions","checkboxSelection","paginationMode","loading","sortingMode","onSortModelChange","orderBy","field","orderByDirection","sort","onRowClick","event","rowCount","onPageChange","onSelectionModelChange","selectionMode","Dashboard","_useOutletContext","useOutletContext","_useOutletContext2","UpdateView","setLoading","setFormData","setFormDataBackup","formFeildToObject","tempFormData","tempObj","reqBody","_sendMessage","agent_id","updateFormField","newFormData","formView","as","md","Check","checked","Spinner","animation","role","sendMessage","AuthorityForm","emergencyDetails","changeEmergencyDetails","assignedAgents","setAssignedAgents","evidenceFiles","setEvidenceFiles","emergencyFormDetails","changeEmergencyFormDetails","view","setView","_useState15","_useState16","setNote","_useState17","_useState18","notes","setNotes","assigned_agents","emergency_files","_useState19","_useState20","setShow","_useState21","_useState22","showMerging","setShowMerging","handleClose","saveNote","reverseBooleanField","newVal","sendUpdateRequest","_ref2","handleCloseMerging","assignAgents","_displayFile","s3_url","Modal","size","dialogClassName","centered","overflowY","Footer","lg","find","reporting_user","created_at","updateField","status","available_statuses","is_active","completed","minHeight","displayFile","ChatList","AuthorityChatroom","newParams","EmergencyAssignment","setEmergencyDetails","test","isVideo","autoPlay","loop","controls","isAudio","emergency_type","reported_by","AdminDashboard","setTableList","showModal","_backup","table","Link","marginLeft","aria-labelledby","AdminForm","App","basename","element","Pages_Login","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","persistConfig","storage","combineReducers","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","store","ReactDOM","render","es","integration_react","src_App","getElementById","origin","addEventListener","fetch","Service-Worker","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fd3353b5.chunk.js","sourcesContent":["export default {\r\n  api: process.env.REACT_APP_API_URL,\r\n};\r\n","import config from \"./config\";\r\nimport axios from \"axios\";\r\n\r\nconst request = async (method, path, body, contentType) => {\r\n  const rawResponse = await axios({\r\n    method: method.toLowerCase(),\r\n    url: `${config.api}/${path}`,\r\n    headers: {\r\n      Accept: \"*/*\",\r\n      \"Content-Type\": contentType || \"application/json\",\r\n      Authorization: localStorage.getItem(\"authToken\")\r\n        ? \"Bearer \" + localStorage.getItem(\"authToken\")\r\n        : \"\",\r\n    },\r\n    data: body,\r\n  });\r\n  return rawResponse;\r\n};\r\n\r\nconst get_emergencies = async () => {\r\n  return await request(\"get\", \"emergencies\");\r\n};\r\n\r\nconst set_emergency_note = async (id, note) => {\r\n  return await request(\"post\", `emergencies/${id}/notes`, { note: note });\r\n};\r\n\r\nconst get_emergency_note = async (id) => {\r\n  return await request(\"get\", `emergencies/${id}/notes`);\r\n};\r\n\r\nconst get_emergency_details = async (emergency_id) => {\r\n  return await request(\"get\", `emergencies/${emergency_id}/all`);\r\n};\r\n\r\nconst get_agent_emergency_details = async () => {\r\n  return await request(\"get\", `agent_emergency`);\r\n};\r\n\r\nconst get_available_agents = async () => {\r\n  return await request(\"get\", `agents/available`);\r\n};\r\n\r\nconst send_chat_message = async (chatroom_id, body) => {\r\n  return await request(\"post\", `chat_rooms/${chatroom_id}/`, body);\r\n};\r\n\r\nconst get_messages = async (chatroom_id, additionalParams = {}) => {\r\n  const params = new URLSearchParams(additionalParams).toString();\r\n  return await request(\"get\", `chat_rooms/${chatroom_id}/messages?${params}`);\r\n};\r\n\r\nconst get_authority_messages = async (chatroom_id, additionalParams = {}) => {\r\n  const params = new URLSearchParams(additionalParams).toString();\r\n  return await request(\r\n    \"get\",\r\n    `authorities/chat_rooms/${chatroom_id}/?${params}`\r\n  );\r\n};\r\n\r\nconst sms_verify = async (body) => {\r\n  return await request(\"post\", \"auth/customer/verify\", body);\r\n};\r\n\r\nconst get_table_list = async () => {\r\n  return await request(\"get\", \"admin/tables\");\r\n};\r\n\r\nconst get_chatrooms = async (path) => {\r\n  return await request(\"get\", path);\r\n};\r\n\r\nconst login = async (body) => {\r\n  return await request(\"post\", \"auth/login\", body);\r\n};\r\nconst create_emergency = async (body) => {\r\n  return await request(\"post\", \"emergencies\", body, \"multipart/form-data\");\r\n};\r\n\r\nconst create_backup = async () => {\r\n  return await request(\"post\", \"admin/backup\");\r\n};\r\n\r\nconst register_customer = async (data) => {\r\n  return await request(\"post\", \"auth/customer/register\", data);\r\n};\r\n\r\n// pass an array of ids to bulk delete\r\nconst bulk_delete = async (path, ids) => {\r\n  return await request(\"post\", `${path}/bulk_delete`, { ids });\r\n};\r\n\r\nconst get_user_info = async () => {\r\n  return await request(\"get\", \"user\");\r\n};\r\n\r\n// implementation details here: https://stackoverflow.com/questions/41938718/how-to-download-files-using-axios\r\nconst get_backup_file = async (fileName) => {\r\n  axios({\r\n    url: `${process.env.REACT_APP_API_URL}/admin/get_backup/${fileName}`, //your url\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"authToken\")\r\n        ? \"Bearer \" + localStorage.getItem(\"authToken\")\r\n        : \"\",\r\n    },\r\n    responseType: \"blob\", // important\r\n  }).then((response) => {\r\n    const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", \"backup.zip\"); //or any other extension\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  });\r\n};\r\n\r\n// put request to update the info of any user or any emergency. body should be in the form {name: value, etc.}\r\nconst update_item = async (path, body) => {\r\n  return await request(\"put\", path, body);\r\n};\r\n\r\nconst get_mergable_emergencies = async (id) => {\r\n  return await request(\"get\", `emergencies/${id}/merge-able`);\r\n};\r\n\r\n// get all emergency types (fires, police, medical, others)\r\nconst get_emergency_types = async () => {\r\n  return await request(\"get\", \"emergency_types\");\r\n};\r\n\r\nconst resend_code = async (body) => {\r\n  return await request(\"post\", \"auth/customer/resend_code\", body);\r\n};\r\n\r\n// get the format for agents, emergencies, authorities, or customers (for the updateView.js)\r\n// to create ex. path = \"agents/create_form\"\r\nconst get_form_format = async (path) => {\r\n  return await request(\"get\", path);\r\n};\r\n\r\n// this gets the info for agents, emergencies, authorities, or customers (to be used by the custom components)\r\nconst get_detailed_info = async (path) => {\r\n  return await request(\"get\", path);\r\n};\r\nconst get_table_data = async (path, searchParams) => {\r\n  return await request(\"get\", `${path}?${searchParams}`);\r\n};\r\n\r\nconst create_from_form = async (path, body) => {\r\n  return await request(\"post\", `${path}`, body);\r\n};\r\n\r\nconst send_init_message = async (body) => {\r\n  return await request(\"post\", \"authorities/chat_rooms\", body);\r\n};\r\n\r\nconst send_authority_message = async (id, body) => {\r\n  return await request(\"post\", `authorities/chat_rooms/${id}/message`, body);\r\n};\r\n// example (/emergencies/1/assign_agents) body {agent_ids: [1, 2, 3]}\r\nconst assign_agents = async (id, agent_ids) => {\r\n  return await request(\"post\", `emergencies/${id}/assign_agents`, {\r\n    agent_ids,\r\n  });\r\n};\r\n\r\nconst merge_emergencies = async (mainEmergencyId, emergencyIds) => {\r\n  return await request(\"post\", `emergencies/merge`, {\r\n    mainEmergencyId,\r\n    emergencyIds,\r\n  });\r\n};\r\n\r\nconst update_emergency_form = async (id, body) => {\r\n  return await request(\"put\", `emergencies/${id}/`, body);\r\n};\r\n\r\nexport {\r\n  create_emergency,\r\n  login,\r\n  register_customer,\r\n  get_user_info,\r\n  sms_verify,\r\n  get_chatrooms,\r\n  get_messages,\r\n  send_chat_message,\r\n  get_table_data,\r\n  get_table_list,\r\n  get_detailed_info,\r\n  get_form_format,\r\n  get_emergency_details,\r\n  update_item,\r\n  get_emergency_types,\r\n  get_available_agents,\r\n  bulk_delete,\r\n  create_from_form,\r\n  assign_agents,\r\n  create_backup,\r\n  get_backup_file,\r\n  get_agent_emergency_details,\r\n  resend_code,\r\n  update_emergency_form,\r\n  get_mergable_emergencies,\r\n  merge_emergencies,\r\n  send_authority_message,\r\n  get_authority_messages,\r\n  send_init_message,\r\n  set_emergency_note,\r\n  get_emergency_note,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Collapse, Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  bulk_delete,\r\n  create_backup,\r\n  get_backup_file,\r\n  get_table_list,\r\n} from \"../../API/API\";\r\nexport default function Sidebar({ tableName, setTableName }) {\r\n  let navigate = useNavigate();\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const [routes, setRoutes] = useState();\r\n  useEffect(() => {\r\n    get_table_list().then((res) => {\r\n      console.log(res.data.data);\r\n      setRoutes(res.data.data);\r\n    });\r\n  }, []);\r\n  const [agentsOpen, setAgentsOpen] = useState(false);\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <div className=\"sidebar__main__content\">\r\n        <div className=\"logo__container\">\r\n          <img className=\"logo__image\" src=\"./Images/logo-svg.svg\" alt=\"\" />\r\n          <div className=\"logo__text\">YARDIM</div>\r\n        </div>\r\n        <div className=\"username__container d-flex align-items-center\">\r\n          <Badge className=\"username__avatar\" bg=\"primary\">\r\n            {userInfo.name.split(\" \")\r\n              ? userInfo.name.split(\" \")[0][0].toUpperCase()\r\n              : null}\r\n          </Badge>\r\n          <div>{userInfo.name}</div>\r\n        </div>\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">PAGES</div>\r\n        </div>\r\n        {routes\r\n          ? routes.map((route, index) => (\r\n              <div\r\n                onClick={() => {\r\n                  setTableName(route.model);\r\n                  navigate(\"/admin\");\r\n                }}\r\n                className={\r\n                  (tableName === route.model ? \"sidebar__link__active\" : \"\") +\r\n                  \" sidebar__link d-flex\"\r\n                }\r\n                key={index}\r\n              >\r\n                <i className=\"bi bi-circle sidebar__link__icon\"></i>\r\n                <div>{`${route.name}`}</div>\r\n              </div>\r\n            ))\r\n          : null}\r\n      </div>\r\n      <div\r\n        onClick={() => navigate(\"/\")}\r\n        className=\"logout__area__container d-flex\"\r\n      >\r\n        <i className=\"bi bi-box-arrow-right logout__icon\"></i>\r\n        <div>Logout</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function UnauthorizedAccess() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"h-100\">\r\n      <div className=\"h-100 w-100 d-flex align-items-center align-items-md-center p-3 justify-content-center\">\r\n        <div className=\"d-block d-md-flex justify-content-between align-items-center w-100 px-4\">\r\n          <div className=\"text-center text-md-start\">\r\n            <div style={{ fontSize: \"4rem\", lineHeight: \"3.25rem\" }}>401</div>\r\n            <div style={{ fontSize: \"1.75rem\" }} className=\"mb-0\">\r\n              Unauthorized Access\r\n            </div>\r\n            <div style={{ color: \"rgba(0, 0, 0, 0.4)\" }} className=\"mb-2\">\r\n              Looks like you tried to visit a page that is not allowed to be\r\n              viewed at this device\r\n            </div>\r\n            <Button onClick={() => navigate(\"/\")}>Go Home</Button>\r\n          </div>\r\n          <img\r\n            className=\"d-none d-md-block\"\r\n            style={{ width: \"50vw\" }}\r\n            src=\"https://img.freepik.com/free-vector/401-error-unauthorized-concept-illustration_114360-5531.jpg?t=st=1656289225~exp=1656289825~hmac=a3fefae3fc774e8c9696af9aedac24ee29f3b8a7739477a5e0a9c1a04fbb03b4&w=1380\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Sidebar from \"./Components/Sidebar\";\r\nimport UnauthorizedAccess from \"../Components/UnauthorizedAccess\";\r\nexport default function AdminApp() {\r\n  const [tableName, setTableName] = useState(\"customers\");\r\n  return (\r\n    <>\r\n      <div className=\"authority__container\">\r\n        <Sidebar tableName={tableName} setTableName={setTableName}></Sidebar>\r\n        <Outlet context={[tableName, setTableName]}></Outlet>\r\n      </div>\r\n      <div className=\"d-block d-md-none\">\r\n        <UnauthorizedAccess></UnauthorizedAccess>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Button, Alert } from \"react-bootstrap\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NoPermission() {\r\n  return (\r\n    <>\r\n      <Alert variant=\"danger\">\r\n        <Alert.Heading>Permission Error!</Alert.Heading>\r\n        <p>\r\n          You don't have permission to view that page, you can press the button\r\n          below to Login or Register!\r\n        </p>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Link to={\"/\"}>\r\n            <Button onClick={() => {}} variant=\"outline-danger\">\r\n              Authenticate me!\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Alert>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Outlet, Link, useNavigate } from \"react-router-dom\";\r\nimport NoPermission from \"../Pages/NoPermission\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UnauthorizedAccess from \"../Components/UnauthorizedAccess\";\r\nexport default function AgentApp() {\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[2];\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  return (\r\n    <>\r\n      <div className=\"user__app__container\">\r\n        <Outlet></Outlet>\r\n        {/* bottom navbar */}\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"user-bottom-navbar\">\r\n          {/* <Container id=\"bottom-nav-container\"> */}\r\n          <Nav className=\"navbar__item__container\" id=\"change-flex-to-row\">\r\n            <Nav.Item\r\n              className={\r\n                (!appletName ? \"nav__item__active\" : \"\") + \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (!appletName ? \"bi-house-fill\" : \"bi-house\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"chat\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"chat\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"chat\"\r\n                      ? \"bi-chat-left-dots-fill\"\r\n                      : \"bi-chat-left-dots\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"profile\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"profile\"} className=\"link__dark\">\r\n                <i className=\"bi bi-person-circle fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"call-help\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"report\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"call-help\" ? \"bi-upload\" : \"bi-upload\") +\r\n                    \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"nav__item\">\r\n              {/* remember that I implemented logout just by rerouting to login page */}\r\n              <Link to={\"/\"} className=\"link__dark\">\r\n                <i className=\"bi bi-box-arrow-right fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {/* </Container> */}\r\n        </Navbar>{\" \"}\r\n      </div>\r\n      <div className=\"d-none d-md-block\">\r\n        <UnauthorizedAccess></UnauthorizedAccess>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Collapse, Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Sidebar({ tableName, setTableName }) {\r\n  let navigate = useNavigate();\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const [routes, setRoutes] = useState([\r\n    {\r\n      name: \"Emergencies\",\r\n      path: \"\",\r\n      icon: \"bi bi-exclamation-circle\",\r\n    },\r\n  ]);\r\n  const [agentsOpen, setAgentsOpen] = useState(false);\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n\r\n  return (\r\n    <div className=\"sidebar__container\">\r\n      <div className=\"sidebar__main__content\">\r\n        <div onClick={() => navigate(\"/authority\")} className=\"logo__container\">\r\n          <img className=\"logo__image\" src=\"./Images/logo-svg.svg\" alt=\"\" />\r\n          <div className=\"logo__text\">YARDIM</div>\r\n        </div>\r\n        <div className=\"username__container d-flex align-items-center\">\r\n          <Badge className=\"username__avatar\" bg=\"primary\">\r\n            {userInfo.name.split(\" \")[0][0].toUpperCase() +\r\n              userInfo.name.split(\" \")[1][0].toUpperCase()}\r\n          </Badge>\r\n          <div>{userInfo.name}</div>\r\n        </div>\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">PAGES</div>\r\n        </div>\r\n        {routes.map((route, index) => (\r\n          <div\r\n            onClick={() => {\r\n              setTableName(\"emergencies\");\r\n              navigate(\"/authority\");\r\n            }}\r\n            className={\r\n              (route.path === appletName ||\r\n              (route.path === \"\" && appletName === \"authority\" && !path[2])\r\n                ? \"sidebar__link__active\"\r\n                : \"\") + \" sidebar__link d-flex\"\r\n            }\r\n            key={index}\r\n          >\r\n            <i className={route.icon + \" sidebar__link__icon\"}></i>\r\n            <div>{`${route.name}`}</div>\r\n          </div>\r\n        ))}\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">AGENT OPERATIONS</div>\r\n        </div>\r\n        <div\r\n          onClick={() => setAgentsOpen(!agentsOpen)}\r\n          aria-expanded={agentsOpen}\r\n          aria-controls=\"sidebar__agents__collapse\"\r\n          className={\r\n            (agentsOpen ? \"sidebar__link__collapse__toggle__open\" : \"\") +\r\n            \" sidebar__link d-flex align-items-center\"\r\n          }\r\n        >\r\n          <i className=\"bi bi-exclamation-circle sidebar__link__icon\"></i>\r\n          <div>Agents</div>\r\n          <i\r\n            className={\r\n              (agentsOpen\r\n                ? \"side__link__arrow__open \"\r\n                : \"side__link__arrow__closed \") +\r\n              \"bi bi-chevron-right sidebar__link__icon side__link__arrow\"\r\n            }\r\n          ></i>\r\n        </div>\r\n\r\n        <div className=\"sidebar__link__collapse\">\r\n          <Collapse in={agentsOpen}>\r\n            <div id=\"sidebar__agents__collapse\">\r\n              <Link\r\n                to={\"form/agents/create_form\"}\r\n                className=\"sidebar__link d-flex align-items-center\"\r\n              >\r\n                <i className=\"bi bi-circle sidebar__link__icon__circle\"></i>\r\n                <div>Create Agent</div>\r\n              </Link>\r\n              <div\r\n                onClick={() => {\r\n                  setTableName(\"agents\");\r\n                  navigate(\"/authority\");\r\n                }}\r\n                className=\"sidebar__link d-flex align-items-center\"\r\n              >\r\n                <i className=\"bi bi-circle sidebar__link__icon__circle\"></i>\r\n                <div>All Agents</div>\r\n              </div>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <div className=\"page__section__container\">\r\n          <div className=\"page__section__title\">CHATS</div>\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"chatList\");\r\n          }}\r\n          className={\r\n            (path[2] === \"chatList\" ? \"sidebar__link__active\" : \"\") +\r\n            \" sidebar__link d-flex align-items-center\"\r\n          }\r\n        >\r\n          <i\r\n            style={{ fontSize: \"18px\" }}\r\n            className=\"bi bi-chat-dots sidebar__link__icon__circle\"\r\n          ></i>\r\n          Chat\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        onClick={() => navigate(\"/\")}\r\n        className=\"logout__area__container d-flex\"\r\n      >\r\n        <i className=\"bi bi-box-arrow-right logout__icon\"></i>\r\n        <div>Logout</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Link, Outlet } from \"react-router-dom\";\r\nimport { NavDropdown, Tab, Row, Nav, Col } from \"react-bootstrap\";\r\nimport Sidebar from \"./Components/Sidebar\";\r\nimport UnauthorizedAccess from \"../Components/UnauthorizedAccess\";\r\n\r\nexport default function AuthoritiesApp() {\r\n  const [tableName, setTableName] = useState(\"emergencies\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"authority__container\">\r\n        <Sidebar tableName={tableName} setTableName={setTableName}></Sidebar>\r\n        <Outlet context={[tableName, setTableName]}></Outlet>\r\n      </div>\r\n      <div className=\"d-block d-md-none\">\r\n        <UnauthorizedAccess></UnauthorizedAccess>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { login, get_user_info } from \"../API/API\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { replaceUser, updateUser } from \"../redux/userInfoSlice\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport config from \"../API/config\";\r\nimport Pusher from \"pusher-js\";\r\nimport { toggle } from \"../redux/successInfoSlice\";\r\nimport GeneralFeedbackToast from \"../Components/GeneralFeedbackToast\";\r\n\r\nlet pusher;\r\n\r\nfunction Login() {\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // this way any component can just reroute to login to \"logout\"\r\n    localStorage.removeItem(\"authToken\");\r\n    dispatch(replaceUser({}));\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let response = await login({\r\n        email: emailValue,\r\n        password: passwordValue,\r\n      });\r\n      response = response.data;\r\n      console.log(\"this is the response: \", response);\r\n      localStorage.setItem(\"authToken\", response.accessToken);\r\n      let userInfoRequest = await get_user_info();\r\n      userInfoRequest = userInfoRequest.data;\r\n      dispatch(updateUser(userInfoRequest.data));\r\n\r\n      console.log(\"process ENV\", process.env.REACT_APP_PUSHER_APP_KEY);\r\n      pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\r\n        cluster: \"eu\",\r\n        encrypted: true,\r\n        authEndpoint: `${config.api}/pusher/auth`,\r\n        auth: {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"authToken\")\r\n              ? \"Bearer \" + localStorage.getItem(\"authToken\")\r\n              : \"\",\r\n          },\r\n        },\r\n      });\r\n\r\n      const notification = pusher.subscribe(\r\n        `private-notification.${userInfoRequest.data.id}`\r\n      );\r\n      notification.bind(\"notification\", (data) => {\r\n        console.log(\"I am insideeeee\");\r\n        console.log(\"bind data \", data);\r\n        let notification = new Notification(data.details.title, {\r\n          body: data.details.payload.message,\r\n        });\r\n      });\r\n      navigate(`/${response.userData.type}/`);\r\n      console.log(\"Login was Successful\");\r\n    } catch (error) {\r\n      console.log(\"unsuccesful Login Attempt \", error);\r\n      dispatch(\r\n        updateError({\r\n          techError: error.message,\r\n          // descriptiveError: error.response.data.data,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login__parent__container\">\r\n      <div className=\"login__container\">\r\n        <img src=\"./Images/logo-svg.svg\" alt=\"\" className=\"logo\" />\r\n        <div className=\"login__form__container\">\r\n          <div className=\"main__header\">\r\n            <h1 className=\"main__header__title\">Login</h1>\r\n            <p className=\"main-header__text\">\r\n              Enter your login details to sign in to your account\r\n            </p>\r\n          </div>\r\n\r\n          <Form className=\"form\" onSubmit={onSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"form__label\">Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={emailValue}\r\n                onChange={(e) => setEmailValue(e.target.value)}\r\n              />\r\n              <Form.Text className=\"text-muted form__label\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"form__label\">Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                className=\"form__input\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              className=\"mb-2 submit__button\"\r\n              style={{ marginRight: \"8px\" }}\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className=\"mb-2 submit__button\"\r\n              variant=\"primary\"\r\n              onClick={(e) => {\r\n                // you can check mdn notification documentation for implementation details\r\n                console.log(Notification.permission);\r\n\r\n                Notification.requestPermission();\r\n\r\n                if (Notification.permission === \"granted\") {\r\n                  console.log(\"notification access is granted\");\r\n                }\r\n              }}\r\n            >\r\n              Get Notifications\r\n            </Button>\r\n          </Form>\r\n          <Link to={\"register\"} className=\"link__register\">\r\n            <p>Register a New User</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\nexport { pusher };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userInfoSlice = createSlice({\r\n  name: \"userInfo\",\r\n  initialState: {\r\n    value: {},\r\n  },\r\n  reducers: {\r\n    updateUser: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = { ...state.value, ...action.payload };\r\n      // state.userInfo = { ...state.UserInfo, ...action.payload };\r\n    },\r\n    replaceUser: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updateUser, replaceUser } = userInfoSlice.actions;\r\n\r\nexport default userInfoSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const errorInfoSlice = createSlice({\r\n  name: \"errorInfo\",\r\n  initialState: {\r\n    value: {\r\n      // this is the format I am expecting\r\n      // techError: \"\",\r\n      // descriptiveError: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    updateError: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      console.log(\"payload\", action.payload);\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { updateError } = errorInfoSlice.actions;\r\n\r\nexport default errorInfoSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const successInfoSlice = createSlice({\r\n  name: \"successInfo\",\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    toggle: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { toggle } = successInfoSlice.actions;\r\n\r\nexport default successInfoSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toggle } from \"../redux/successInfoSlice\";\r\n// techError == error.message\r\n// descriptiveError == error.data.data\r\n\r\nexport default function GeneralFeedbackToast() {\r\n  const errorInfo = useSelector((state) => state.errorInfo.value);\r\n  const successInfo = useSelector((state) => state.successInfo.value);\r\n  const dispatch = useDispatch();\r\n  const options = {\r\n    onOpen: (props) => console.log(props.foo),\r\n    onClose: (props) => console.log(props.foo),\r\n    autoClose: 2000,\r\n    type: toast.TYPE.INFO,\r\n    hideProgressBar: false,\r\n    position: toast.POSITION.TOP_CENTER,\r\n    pauseOnHover: true,\r\n    closeButton: false,\r\n    // and so on ...\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"error info \", errorInfo);\r\n    if (successInfo) {\r\n      options.type = toast.TYPE.SUCCESS;\r\n      options.onClose = (props) => {\r\n        dispatch(toggle());\r\n      };\r\n\r\n      toast(\"Operation Success!\", options);\r\n    } else if (errorInfo.techError) {\r\n      options.type = toast.TYPE.ERROR;\r\n      options.onClose = (props) => {\r\n        dispatch(updateError({}));\r\n      };\r\n\r\n      toast(errorInfo.techError, options);\r\n    }\r\n  }, [errorInfo, successInfo]);\r\n\r\n  // @TODO: try to elemenate the use of extra state and trigger rerendering on redux state change. (Hint, it is prolly immutability of state changing in reducer)\r\n  return <ToastContainer />;\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nexport default function Page404() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"h-100 w-100 d-flex align-items-start align-items-md-center p-3 justify-content-center\">\r\n      <div className=\"d-block d-md-flex justify-content-between align-items-center w-100 px-4\">\r\n        <div className=\"text-center text-md-start\">\r\n          <div style={{ fontSize: \"4rem\", lineHeight: \"3.25rem\" }}>404</div>\r\n          <div style={{ fontSize: \"1.75rem\" }} className=\"mb-0\">\r\n            Page Not Found\r\n          </div>\r\n          <div style={{ color: \"rgba(0, 0, 0, 0.4)\" }} className=\"mb-2\">\r\n            Looks like you tried to visit a page that does not exist\r\n          </div>\r\n          <Button onClick={() => navigate(\"/\")}>Go Home</Button>\r\n        </div>\r\n        <img\r\n          className=\"d-none d-md-block\"\r\n          style={{ width: \"50vw\" }}\r\n          src=\"https://img.freepik.com/free-vector/404-error-with-landscape-concept-illustration_114360-7898.jpg?t=st=1656284933~exp=1656285533~hmac=8fc7586f95f9bfc995828df2003d1bc498d90b90afeef850a114ea97f72c3923&w=1800\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { get_chatrooms } from \"../API/API\";\r\n\r\nexport default function Chat() {\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n  const [emergencies, setEmergencies] = useState([]);\r\n  // @TODO: Refactor this\r\n  useEffect(() => {\r\n    (async () => {\r\n      let request = await get_chatrooms(\r\n        appletName === \"user\" ? \"user/emergencies\" : \"agents/chat_rooms\"\r\n      );\r\n      setEmergencies(request.data.data);\r\n      console.log(request.data.data);\r\n    })();\r\n  }, []);\r\n\r\n  let emergenciesArray = emergencies.map((emergency) => {\r\n    return (\r\n      <div\r\n        className=\"messages__row__container\"\r\n        key={emergency.id}\r\n        onClick={(e) => {\r\n          navigate(\r\n            `chatroom/${emergency.chat_room_id}?chatRoomType=${emergency.chat_room_type}`\r\n          );\r\n        }}\r\n      >\r\n        <div className=\"messages__row__avatar\"># {emergency.id}</div>\r\n        <div className=\"messages__row__right\">\r\n          <div className=\"messages__row__label\">\r\n            {emergency.chat_room_type\r\n              ? emergency.agent_name\r\n              : `Emergency ${emergency.id}`}\r\n          </div>\r\n          <div className=\"messages__row__message\">{emergency.description}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"general__mobile__container\">\r\n      <div className=\"text-center mb-4\">\r\n        <h1\r\n          className=\"general__mobile__title mx-3\"\r\n          style={{ \"font-size\": \"1.35rem\" }}\r\n        >\r\n          Chat Rooms\r\n        </h1>\r\n      </div>\r\n      {emergenciesArray}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function Profile() {\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  useEffect(() => {\r\n    console.log(userInfo);\r\n  }, []);\r\n  return (\r\n    <div className=\"general__mobile__container\">\r\n      <div>\r\n        <div className=\"text-center mb-4\">\r\n          <h1\r\n            className=\"general__mobile__title mx-3\"\r\n            style={{ \"font-size\": \"1.35rem\" }}\r\n          >\r\n            Profile\r\n          </h1>\r\n        </div>\r\n        <div className=\"d-flex flex-column align-items-center mb-4\">\r\n          <div className=\"user__avatar mb-2\">\r\n            {userInfo.name.split(\" \")[0][0].toUpperCase() +\r\n              userInfo.name.split(\" \")[1][0].toUpperCase()}\r\n          </div>\r\n          <div className=\"user__avatar__label\">{userInfo.name}</div>\r\n        </div>\r\n        <div>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label className=\"general__mobile__label\">Email</Form.Label>\r\n            <Form.Control\r\n              required\r\n              className=\"general__mobile__input\"\r\n              disabled\r\n              type=\"email\"\r\n              value={userInfo.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label className=\"general__mobile__label\">Phone</Form.Label>\r\n            <Form.Control\r\n              required\r\n              className=\"general__mobile__input\"\r\n              disabled\r\n              type=\"number\"\r\n              value={userInfo.phone_number}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label className=\"general__mobile__label\">ID</Form.Label>\r\n            <Form.Control\r\n              className=\"general__mobile__input\"\r\n              disabled\r\n              type=\"number\"\r\n              value={userInfo.id}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label className=\"general__mobile__label\">Type</Form.Label>\r\n            <Form.Control\r\n              required\r\n              className=\"general__mobile__input\"\r\n              disabled\r\n              type=\"text\"\r\n              value={userInfo.type}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { register_customer } from \"../../API/API\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { updateError } from \"../../redux/errorInfoSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\r\n  const [firstNameValue, setFirstNameValue] = useState(\"\");\r\n  const [lastNameValue, setLastNameValue] = useState(\"\");\r\n  const [dobValue, setDobValue] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // code used to set an authtoken for testing purposes\r\n    // localStorage.setItem(\r\n    //   \"authToken\",\r\n    //   \"19|xHyc2VPXG7GS2h1qK0U7rKz0m0PAFQjR5jRYCVpm\"\r\n    // );\r\n  }, []);\r\n  // primary key is \"Email\"\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let obj = {\r\n      first_name: firstNameValue,\r\n      last_name: lastNameValue,\r\n      email: emailValue,\r\n      password: passwordValue,\r\n      phone_number: phoneNumberValue,\r\n      password_confirmation: passwordValue,\r\n      dob: dobValue,\r\n      type: \"user\",\r\n    };\r\n    try {\r\n      let response = await register_customer(obj);\r\n      response = response.data;\r\n      localStorage.setItem(\"authToken\", response.data.token);\r\n\r\n      // console.log(\"response is: \", response);\r\n      // console.log(\"response data is: \", response.data);\r\n      // console.log(\"response request_id is: \", response.data.request_id);\r\n      // console.log(\"response user id is: \", response.data.user.id);\r\n\r\n      navigate(\r\n        `/user/sms-verify/${response.data.request_id}/${response.data.user.id}`\r\n      );\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      dispatch(\r\n        updateError({\r\n          techError: error.message,\r\n          descriptiveError: error.response.data.data,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"general__mobile__container registration__form__container\">\r\n        <div className=\"text-center mx-3\">\r\n          <h1 className=\"registration__form__title\">Sign Up</h1>\r\n          <p className=\"registration__form__subtitle\">\r\n            Enter your details to create a user account\r\n          </p>\r\n        </div>\r\n\r\n        <Form onSubmit={onSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              Email address\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={emailValue}\r\n              onChange={(e) => {\r\n                setEmailValue(e.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted d-none\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicFirstName\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              First Name\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter First Name\"\r\n              value={firstNameValue}\r\n              onChange={(e) => {\r\n                setFirstNameValue(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicLastName\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              Last Name\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter Last Name\"\r\n              value={lastNameValue}\r\n              onChange={(e) => setLastNameValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPhoneNumber\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              Phone Number\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"number\"\r\n              placeholder=\"Enter Phone Number\"\r\n              value={phoneNumberValue}\r\n              onChange={(e) => setPhoneNumberValue(e.target.value)}\r\n            />\r\n            <Form.Text>Make sure the number starts with 90</Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              Password\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicDoB\">\r\n            <Form.Label className=\"registration__form__label\">\r\n              Date of Birth\r\n            </Form.Label>\r\n            <Form.Control\r\n              className=\"registration__form__input\"\r\n              required\r\n              type=\"date\"\r\n              placeholder=\"Enter Date\"\r\n              value={dobValue}\r\n              onChange={(e) => setDobValue(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            className=\"registration__form__button mb-2\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            block\r\n          >\r\n            Register\r\n          </Button>\r\n          <Link className=\"text-decoration-none\" to={\"/\"}>\r\n            Go Back\r\n          </Link>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Offcanvas,\r\n  Nav,\r\n  Form,\r\n  NavDropdown,\r\n  FormControl,\r\n  Button,\r\n  InputGroup,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { create_emergency, get_emergency_types } from \"../../API/API\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toggle } from \"../../redux/successInfoSlice\";\r\nimport { updateError } from \"../../redux/errorInfoSlice\";\r\n\r\nconst axios = require(\"axios\").default;\r\nexport default function Report() {\r\n  const [canvasShow, setCanvasShow] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [emergencyDescription, SetEmergencyDescription] = useState(\"\");\r\n  const [emergencyType, setEmergencyType] = useState(0);\r\n  const [emergencyTypes, setEmergencyTypes] = useState([]);\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleClose = () => setCanvasShow(false);\r\n  const handleShow = () => setCanvasShow(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // detials found here: https://www.pluralsight.com/guides/how-to-use-geolocation-call-in-reactjs\r\n  function findCurrentLocation() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      function(position) {\r\n        let newPosition = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        console.log(position);\r\n        setCoordinates(newPosition);\r\n      },\r\n      function(error) {\r\n        dispatch(\r\n          updateError({\r\n            techError: error.message,\r\n            descriptiveError: error.response.data.data,\r\n          })\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(files);\r\n  }, [files]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let emergency_types = await get_emergency_types();\r\n        setEmergencyTypes(emergency_types.data.data);\r\n        setEmergencyType(emergency_types.data.data[0].id);\r\n        console.log(emergencyTypes);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const uploadFiles = async () => {\r\n    //details on this implementation found here: https://refine.dev/blog/how-to-multipart-file-upload-with-react-hook-form/\r\n    //details on how to upload multipls files here: https://stackoverflow.com/questions/12989442/uploading-multiple-files-using-formdata\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      console.log(file);\r\n      formData.append(\"files[]\", file);\r\n    }\r\n    const res = await fetch(\"http://localhost:5000/upload-file\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }).then((res) => res.json());\r\n    alert(JSON.stringify(`${res.message}, status: ${res.status}`));\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    /* Backend requirements\r\n      img_array,\r\n      latitude,\r\n      longitude,\r\n      description,\r\n      emergency_type_id,\r\n      video,\r\n      sound recording,\r\n      time,\r\n    */\r\n    console.log(e);\r\n\r\n    findCurrentLocation();\r\n\r\n    let time = new Date();\r\n\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      console.log(file);\r\n      formData.append(file.name, file);\r\n    }\r\n    const info = {\r\n      latitude: coordinates.lat,\r\n      longitude: coordinates.lng,\r\n      description: emergencyDescription,\r\n      time: time.getTime(),\r\n      emergency_type_id: emergencyType,\r\n    };\r\n\r\n    Object.keys(info).forEach((key) => {\r\n      formData.append(key, info[key]);\r\n    });\r\n    try {\r\n      await create_emergency(formData);\r\n      // emergency created successfully\r\n      setCanvasShow(false);\r\n      dispatch(toggle());\r\n    } catch (error) {\r\n      //error occured\r\n      console.log(error);\r\n      setCanvasShow(false);\r\n      dispatch(\r\n        updateError({\r\n          techError: error.message,\r\n          descriptiveError: error.response.data.data,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"general__mobile__container\">\r\n        <div className=\"text-center\">\r\n          <h1\r\n            className=\"general__mobile__title mx-3\"\r\n            style={{ \"font-size\": \"1.35rem\" }}\r\n          >\r\n            Emergency Assistance Needed?\r\n          </h1>\r\n          <p className=\"general__mobile__subtitle\">\r\n            Press the button to report an emergency\r\n          </p>\r\n        </div>\r\n        <div className=\"ripple__button__container\">\r\n          <div onClick={handleShow} className=\"ripple__effect__button\">\r\n            <i class=\"bi bi-broadcast\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        {/* offcanvas conatianing the form to submit the emergency */}\r\n        {/* made off canvas bigger i.e. fit the content by adding \"h-auto\"  */}\r\n        <Offcanvas\r\n          show={canvasShow}\r\n          onHide={handleClose}\r\n          placement=\"bottom\"\r\n          className=\"h-auto\"\r\n        >\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Send Report</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            {/* images upload form */}\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Select\r\n                  aria-label=\"Default select example\"\r\n                  disabled={emergencyTypes.length <= 0}\r\n                  value={emergencyType}\r\n                  onChange={(e) => setEmergencyType(e.target.value)}\r\n                >\r\n                  {emergencyTypes.map((elem) => {\r\n                    return (\r\n                      <option key={nanoid()} value={elem.id}>\r\n                        {elem.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n                <Form.Text>Choose the Kind of Emergency</Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  multiple\r\n                  {...register(\"files\")}\r\n                  onChange={(e) => setFiles(e.target.files)}\r\n                />\r\n                <Form.Text>You can Upload Multiple files</Form.Text>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicDescription\">\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Emergency Description\"\r\n                  value={emergencyDescription}\r\n                  onChange={(e) => SetEmergencyDescription(e.target.value)}\r\n                />\r\n                <Form.Text>Please be as descriptive as possible</Form.Text>\r\n              </Form.Group>\r\n              <Button type=\"submit\">Submit form</Button>\r\n            </Form>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { resend_code, sms_verify } from \"../../API/API\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateError } from \"../../redux/errorInfoSlice\";\r\nimport { toggle } from \"../../redux/successInfoSlice\";\r\n\r\nexport default function SmsVerify() {\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let { id, request_id } = useParams();\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    let requestBody = {\r\n      request_id: request_id,\r\n      code: verificationCode,\r\n      id,\r\n    };\r\n    try {\r\n      let smsVerificationResponse = await sms_verify(requestBody);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setErrorMsg(\r\n        error.response.data\r\n          ? `${error.message}, ${error.response.data.message}`\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"general__mobile__container\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"general__mobile__title\">Verify Phone</h1>\r\n        <p className=\"general__mobile__subtitle\">Verification code was sent</p>\r\n      </div>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group\r\n          className=\"my-5 text-center\"\r\n          controlId=\"formBasicSmsVerification\"\r\n        >\r\n          <Form.Control\r\n            required\r\n            className=\"general__mobile__input mb-2\"\r\n            type=\"number\"\r\n            placeholder=\"Enter Code\"\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"general__mobile__button mb-2\"\r\n          type=\"submit\"\r\n        >\r\n          Verify and Sign-up\r\n        </Button>\r\n      </Form>\r\n      {/* remember that now only rerouting to the login is enough to logout (bcz login auto deletes authToken) */}\r\n      <Link className=\"label acct-label text-decoration-none\" to=\"/\">\r\n        Cancel\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Outlet, Link, useNavigate } from \"react-router-dom\";\r\nimport NoPermission from \"../Pages/NoPermission\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport useIsAuthenticated from \"../Util/useIsAuthenticated\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UnauthorizedAccess from \"../Components/UnauthorizedAccess\";\r\nexport default function UserApp() {\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[2];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user__app__container\">\r\n        <Outlet></Outlet>\r\n        {/* bottom navbar */}\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"user-bottom-navbar w-100\">\r\n          {/* <Container id=\"bottom-nav-container\"> */}\r\n          <Nav className=\"navbar__item__container\" id=\"change-flex-to-row\">\r\n            <Nav.Item\r\n              className={\r\n                (!appletName ? \"nav__item__active\" : \"\") + \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (!appletName ? \"bi-house-fill\" : \"bi-house\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"chat\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"chat\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"chat\"\r\n                      ? \"bi-chat-left-dots-fill\"\r\n                      : \"bi-chat-left-dots\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"profile\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"profile\"} className=\"link__dark\">\r\n                <i className=\"bi bi-person-circle fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item\r\n              className={\r\n                (appletName === \"call-help\" ? \"nav__item__active\" : \"\") +\r\n                \" nav__item\"\r\n              }\r\n            >\r\n              <Link to={\"call-help\"} className=\"link__dark\">\r\n                <i\r\n                  className={\r\n                    (appletName === \"call-help\"\r\n                      ? \"bi-telephone-fill\"\r\n                      : \"bi-telephone\") + \" bi  fa-lg\"\r\n                  }\r\n                ></i>\r\n              </Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"nav__item\">\r\n              {/* remember that I implemented logout just by rerouting to login page */}\r\n              <Link to={\"/\"} className=\"link__dark\">\r\n                <i className=\"bi bi-box-arrow-right fa-lg\"></i>\r\n              </Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          {/* </Container> */}\r\n        </Navbar>{\" \"}\r\n      </div>\r\n      <div className=\"d-none d-md-block\">\r\n        <UnauthorizedAccess></UnauthorizedAccess>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport LocalPoliceIcon from \"@mui/icons-material/LocalPolice\";\r\nimport LocalFireDepartmentIcon from \"@mui/icons-material/LocalFireDepartment\";\r\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\r\nimport ForestIcon from \"@mui/icons-material/Forest\";\r\nimport SurfingIcon from \"@mui/icons-material/Surfing\";\r\nimport BoltIcon from \"@mui/icons-material/Bolt\";\r\nimport PhonelinkEraseIcon from \"@mui/icons-material/PhonelinkErase\";\r\nimport SatelliteAltIcon from \"@mui/icons-material/SatelliteAlt\";\r\n\r\nexport default function CallHelp() {\r\n  return (\r\n    <>\r\n      <div className=\"general__mobile__container\">\r\n        <div className=\"text-center mb-4\">\r\n          <h1\r\n            className=\"general__mobile__title\"\r\n            style={{ \"font-size\": \"1.35rem\" }}\r\n          >\r\n            Emergency Numbers\r\n          </h1>\r\n        </div>\r\n        <Container className=\"justify-content-center\">\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"hsla(210, 100%, 71%, 0.306)\",\r\n                  borderColor: \"hsla(210, 100%, 71%, 0)\",\r\n                }}\r\n                href=\"tel:155\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalPoliceIcon\r\n                  style={{ color: \"#6bb5ff\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></LocalPoliceIcon>\r\n              </Button>\r\n              <p>Police</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255, 107, 107, 0.2)\",\r\n                  borderColor: \"rgba(255, 107, 107, 0.0)\",\r\n                }}\r\n                href=\"tel:199\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalFireDepartmentIcon\r\n                  style={{ color: \"#FF6B6B\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></LocalFireDepartmentIcon>\r\n              </Button>\r\n              <p>Fire</p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"gy-5\">\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  borderColor: \"rgb(209 209 209)\",\r\n                }}\r\n                href=\"tel:112\"\r\n                variant=\"secondary\"\r\n              >\r\n                <LocalHospitalIcon\r\n                  style={{ color: \"#FF6B6B\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></LocalHospitalIcon>\r\n              </Button>\r\n              <p>Ambulance</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"rgba(107, 203, 119, 0.2)\",\r\n                  borderColor: \"transparent\",\r\n                }}\r\n                href=\"tel:177\"\r\n                variant=\"secondary\"\r\n              >\r\n                <ForestIcon\r\n                  style={{ color: \"#6BCB77\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></ForestIcon>\r\n              </Button>\r\n              <p>Forest Fires</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"rgba(107, 107, 255, 0.2)\",\r\n                  borderColor: \"transparent\",\r\n                }}\r\n                href=\"tel:158\"\r\n                variant=\"secondary\"\r\n              >\r\n                <SurfingIcon\r\n                  style={{ color: \"#6b6bff\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></SurfingIcon>\r\n              </Button>\r\n              <p>Coast Guard</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                href=\"tel:166\"\r\n                style={{\r\n                  backgroundColor: \"rgba(56, 56, 56, 0.2)\",\r\n                  borderColor: \"transparent\",\r\n                }}\r\n                variant=\"secondary\"\r\n              >\r\n                <SatelliteAltIcon\r\n                  style={{ color: \"#383838\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></SatelliteAltIcon>\r\n              </Button>\r\n              <p>Meteorology</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255, 217, 61, 0.2)\",\r\n                  borderColor: \"transparent\",\r\n                }}\r\n                href=\"tel:188\"\r\n                variant=\"secondary\"\r\n              >\r\n                <BoltIcon\r\n                  style={{ color: \"#FFD93D\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></BoltIcon>\r\n              </Button>\r\n              <p>Electrical Faults</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\"d-flex justify-content-center align-items-center py-5\"\r\n                style={{\r\n                  backgroundColor: \"rgba(255, 181, 107, 0.2)\",\r\n                  borderColor: \"transparent\",\r\n                }}\r\n                href=\"tel:161\"\r\n                variant=\"secondary\"\r\n              >\r\n                <PhonelinkEraseIcon\r\n                  style={{ color: \"#ffb56b\" }}\r\n                  className=\"emergency__number__icons\"\r\n                ></PhonelinkEraseIcon>\r\n              </Button>\r\n              <p>Phone issues</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport {\r\n  get_authority_messages,\r\n  get_messages,\r\n  send_chat_message,\r\n  send_authority_message,\r\n} from \"../API/API\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { pusher } from \"./Login\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Chatroom({ chatRoomType }) {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [paginatationData, setPaginatationData] = useState({\r\n    page: 1,\r\n    perPage: 0,\r\n    total: 0,\r\n  });\r\n  // get user info from redux store\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  useEffect(() => {\r\n    try {\r\n      if (searchParams.get(\"chatRoomType\") === \"agent_chat\") {\r\n        // agent-authority chats\r\n        const channel = pusher.subscribe(`private-agent-chat.${chatroom_id}`);\r\n        channel.bind(\"message\", (data) => {\r\n          console.log(\"I got called\");\r\n          appendMsg(data.user.name, data.chatMessage.message, data.user.name);\r\n        });\r\n      } else {\r\n        // normal agent-customer chat\r\n        const channel = pusher.subscribe(`private-chat.${chatroom_id}`);\r\n        channel.bind(\"message\", (data) => {\r\n          console.log(\"I got called\");\r\n          appendMsg(data.user.id, data.chatMessage.message);\r\n        });\r\n      }\r\n      console.log(pusher);\r\n    } catch (error) {\r\n      console.log(error);\r\n      navigate(\"/\");\r\n    }\r\n\r\n    // clean up code\r\n    return () => {\r\n      if (pusher) {\r\n        if (searchParams.get(\"chatRoomType\") === \"agent_chat\") {\r\n          pusher.unsubscribe(`private-agent-chat.${chatroom_id}`);\r\n        } else {\r\n          pusher.unsubscribe(`private-chat.${chatroom_id}`);\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  let { chatroom_id } = useParams();\r\n\r\n  function appendMsg(userId, message, name) {\r\n    setMessages((prevValue) => [\r\n      { user_id: userId, message, user_name: name },\r\n      ...prevValue,\r\n    ]);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (searchParams.get(\"chatRoomType\") === \"agent_chat\") {\r\n      send_authority_message(chatroom_id, { message });\r\n    } else {\r\n      send_chat_message(chatroom_id, { message });\r\n    }\r\n\r\n    // commented for now, duplicate messages\r\n    // appendMsg(userInfo.name, message);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    (async () => {\r\n      try {\r\n        let res =\r\n          searchParams.get(\"chatRoomType\") === \"agent_chat\"\r\n            ? await get_authority_messages(chatroom_id)\r\n            : await get_messages(chatroom_id);\r\n        res = res.data.data;\r\n        console.log(res);\r\n        setMessages(res.data);\r\n        setPaginatationData({\r\n          page: res.current_page,\r\n          perPage: res.per_page,\r\n          total: res.total,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  async function fetchMoreData() {\r\n    let newParams = {\r\n      ...paginatationData,\r\n      page: paginatationData.page + 1,\r\n    };\r\n    try {\r\n      let res =\r\n        searchParams.get(\"chatRoomType\") === \"agent_chat\"\r\n          ? await get_authority_messages(chatroom_id)\r\n          : await get_messages(chatroom_id);\r\n      res = res.data.data;\r\n      console.log(res);\r\n      setMessages([...messages, ...res.data]);\r\n      setPaginatationData({\r\n        page: res.current_page,\r\n        perPage: res.per_page,\r\n        total: res.total,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"chatroom__header__container d-flex justify-content-between align-items-center\">\r\n        <i\r\n          onClick={() => navigate(-1)}\r\n          style={{ fontSize: \"1.15rem\" }}\r\n          class=\"bi bi-chevron-left\"\r\n        ></i>\r\n        <h1\r\n          className=\"general__mobile__title mb-0\"\r\n          style={{ \"font-size\": \"1.35rem\" }}\r\n        >\r\n          Chatroom {chatroom_id}\r\n        </h1>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"chatroom__container pb-0\">\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          style={{\r\n            overflow: \"scroll\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flex: \"1\",\r\n          }}\r\n        >\r\n          <InfiniteScroll\r\n            dataLength={messages.length}\r\n            next={fetchMoreData}\r\n            className=\"chat__room__container\"\r\n            style={{ display: \"flex\", flexDirection: \"column-reverse\" }} //To put endMessage and loader to the top.\r\n            hasMore={messages.length < paginatationData.total}\r\n            loader={<h4>Loading...</h4>}\r\n            scrollableTarget=\"scrollableDiv\"\r\n            inverse={true}\r\n          >\r\n            {messages.map((msg, index) => (\r\n              <div\r\n                className={\r\n                  msg.user_id === userInfo.id\r\n                    ? \"message__right__side\"\r\n                    : \"message__left__side\"\r\n                }\r\n                key={index}\r\n              >\r\n                <div\r\n                  className={\r\n                    msg.user_id === userInfo.id\r\n                      ? \"d-none\"\r\n                      : \"message__username__label\"\r\n                  }\r\n                >\r\n                  {msg.user_name}:\r\n                </div>\r\n                {`${msg.message}`}\r\n              </div>\r\n            ))}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n      <Form style={{ padding: \"12px\" }} onSubmit={onSubmit}>\r\n        <Form.Group\r\n          className=\"d-flex align-items-center\"\r\n          controlId=\"formBasicPassword\"\r\n        >\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            className=\"chat__message__input\"\r\n            placeholder=\"Enter your Msg here\"\r\n            value={message}\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n          />\r\n          <Button type=\"submit\" className=\"message__send__button\">\r\n            <i class=\"bi bi-send-fill\"></i>\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport GeneralFeedbackToast from \"../Components/GeneralFeedbackToast\";\r\nimport useIsAuthenticated from \"../Util/useIsAuthenticated\";\r\nimport NoPermission from \"./NoPermission\";\r\n\r\nexport default function MainWrapper() {\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const [authToken, setAuthToken] = useState(isAuthenticated);\r\n  useEffect(() => {\r\n    setAuthToken(isAuthenticated);\r\n  }, [isAuthenticated]);\r\n  return (\r\n    <>\r\n      <GeneralFeedbackToast></GeneralFeedbackToast>\r\n      {authToken ? (\r\n        <>\r\n          <Outlet></Outlet>\r\n        </>\r\n      ) : (\r\n        <NoPermission></NoPermission>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useIsAuthenticated() {\r\n  // I am authenticating by getting the path name and checking if it matches the redux contents\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  const authToken = localStorage.getItem(\"authToken\");\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n  let formType = path[2];\r\n\r\n  console.log(path);\r\n  console.log(\"applet name: \", appletName);\r\n\r\n  console.log(appletName);\r\n  if (\r\n    appletName === \"\" ||\r\n    appletName === \"login\" ||\r\n    appletName === \"register\" ||\r\n    !appletName\r\n  ) {\r\n    console.log(\"pages that dont require authentication\");\r\n    return true;\r\n  }\r\n\r\n  // check authorization for forms\r\n  if (formType === \"agents\" || formType === \"emergencies\") {\r\n    return userInfo.type === \"authority\" || userInfo.type === \"admin\";\r\n  } else if (formType === \"authorities\" || formType === \"customers\") {\r\n    return userInfo.type === \"admin\";\r\n  } else if (formType === \"sms-verify\") {\r\n    return localStorage.getItem(\"authToken\");\r\n  }\r\n\r\n  if (!authToken) {\r\n    console.log(\"user doesnt have an authToken\");\r\n    return false;\r\n  }\r\n\r\n  if (userInfo.type !== appletName) {\r\n    console.log(\"user is trying to access a page he is not allowed to\");\r\n    return false;\r\n  }\r\n\r\n  // return authenticated when it passes all checks\r\n  return true;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport {\r\n  bulk_delete,\r\n  get_mergable_emergencies,\r\n  get_table_data,\r\n} from \"../API/API\";\r\nimport { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { toggle } from \"../redux/successInfoSlice\";\r\n\r\nexport default function DataGridComponent({\r\n  table_name,\r\n  selectedRows,\r\n  setSelectedRows,\r\n  emergencyId,\r\n  disableOnRowSelect,\r\n}) {\r\n  const [columns, setColumns] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [sortModel, setSortModel] = useState({});\r\n  const [tableParams, setTableParams] = useState({\r\n    page: page,\r\n    total: 0,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"i ran\");\r\n    (async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const searchParams = new URLSearchParams({\r\n          ...tableParams,\r\n          page: page,\r\n          ...sortModel,\r\n        }).toString();\r\n        let res;\r\n        if (table_name === \"mergable-emergencies\") {\r\n          res = await get_mergable_emergencies(emergencyId);\r\n        } else {\r\n          res = await get_table_data(table_name, searchParams);\r\n        }\r\n\r\n        setRows(res.data.data);\r\n        console.log(\"NO of Rows \" + res.data.data.length);\r\n        let modifiedCols = res.data.columns.map((column) => {\r\n          return { ...column, flex: 1 };\r\n        });\r\n        setColumns(modifiedCols);\r\n        setTableParams({\r\n          ...res.data.meta,\r\n          perPage: parseInt(res.data.meta.per_page),\r\n          page: page,\r\n        });\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(\"unsuccesful table fetch attempt \", error);\r\n        dispatch(\r\n          updateError({\r\n            techError: error.message,\r\n          })\r\n        );\r\n      }\r\n    })();\r\n  }, [page, sortModel, table_name, tableParams.total]);\r\n\r\n  // async function handleDelete() {\r\n  //   try {\r\n  //     bulk_delete(`${table_name}/bulk_delete`, { ids: selectedRows });\r\n  //     dispatch(toggle());\r\n  //     setTableParams((prevValue) => ({\r\n  //       ...prevValue,\r\n  //       total: prevValue.total - selectedRows.length,\r\n  //     }));\r\n  //   } catch (error) {\r\n  //     console.log(\"unsuccesful delete Attempt \", error);\r\n  //     dispatch(\r\n  //       updateError({\r\n  //         techError: error.message,\r\n  //         descriptiveError: error.response.data.data,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // to fix the row count issue, look here: https://mui.com/x/react-data-grid/pagination/#basic-implementation\r\n  const [rowCountState, setRowCountState] = useState(tableParams.total);\r\n  useEffect(() => {\r\n    setRowCountState((prevRowCountState) =>\r\n      tableParams.total !== undefined ? tableParams.total : prevRowCountState\r\n    );\r\n  }, [tableParams.total, setRowCountState]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100\" style={{ height: \"93%\" }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={15}\r\n          rowsPerPageOptions={[15]}\r\n          checkboxSelection\r\n          paginationMode=\"server\"\r\n          loading={isLoading}\r\n          sortingMode=\"server\"\r\n          onSortModelChange={(model, details) => {\r\n            console.log(\"model\", model);\r\n            console.log(\"details\", details);\r\n            setSortModel({\r\n              orderBy: model[0].field,\r\n              orderByDirection: model[0].sort,\r\n            });\r\n          }}\r\n          onRowClick={(event, details) => {\r\n            if (!disableOnRowSelect) {\r\n              console.log(\"row clicked\", table_name);\r\n              console.log(\"row clicked\", event);\r\n              navigate(\r\n                `form/${\r\n                  table_name === \"available-agents\" ? \"agents\" : table_name\r\n                }/${event.id}`\r\n              );\r\n            } else {\r\n              console.log(\"rows have been clicked\");\r\n            }\r\n          }}\r\n          rowCount={rowCountState}\r\n          onPageChange={(page, details) => {\r\n            setPage(page + 1);\r\n          }}\r\n          onSelectionModelChange={(selectionMode) => {\r\n            console.log(\"rows selected: \", selectionMode);\r\n            setSelectedRows(selectionMode);\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, Button } from \"react-bootstrap\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport DataGridComponent from \"../../Components/DataGridComponent\";\r\n\r\nexport default function Dashboard() {\r\n  const [tableName, setTableName] = useOutletContext();\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  return (\r\n    <div className=\"dashboard__container\">\r\n      <div className=\"authority__card card__height\">\r\n        <div className=\"d-flex align-items-center mb-3 justify-content-between\">\r\n          <div className=\"authority__card__title\">DASHBOARD</div>\r\n        </div>\r\n        <DataGridComponent\r\n          table_name={tableName}\r\n          selectedRows={selectedRows}\r\n          setSelectedRows={setSelectedRows}\r\n        ></DataGridComponent>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Form, Button, Spinner, ToggleButton, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  create_from_form,\r\n  get_form_format,\r\n  send_init_message,\r\n  update_item,\r\n} from \"../API/API\";\r\nimport { updateError } from \"../redux/errorInfoSlice\";\r\nimport { toggle } from \"../redux/successInfoSlice\";\r\n\r\nexport default function UpdateView({ formType, id }) {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState([]);\r\n  const [formDataBackup, setFormDataBackup] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let res = await get_form_format(\r\n          id === \"create_form\" ? `${formType}/${id}` : `${formType}/${id}/form`\r\n        );\r\n        // 1st one is axios, 2nd is kaan's middleware, 3rd is resources's data\r\n        res = res.data.data;\r\n        setFormData(res);\r\n        setFormDataBackup(res);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"unsuccesful form fetch attempt \", error);\r\n        dispatch(\r\n          updateError({\r\n            techError: error.message,\r\n            descriptiveError: error.response.data.data,\r\n          })\r\n        );\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const formFeildToObject = () => {\r\n    let tempFormData = [...formData];\r\n    let tempObj = {};\r\n    tempFormData.forEach((field, index) => {\r\n      tempObj[field.field] = field.value;\r\n    });\r\n    // console.log(\"tempObj\", tempObj);\r\n    return tempObj;\r\n  };\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    let reqBody = formFeildToObject();\r\n    // means we want to create a new user/authority/emergency\r\n    if (id === \"create_form\") {\r\n      console.log(\"you are trying to create a new item\");\r\n      try {\r\n        let res = await create_from_form(`${formType}`, reqBody);\r\n        dispatch(toggle());\r\n      } catch (error) {\r\n        console.log(\"unsuccesful creating Attempt \", error);\r\n        dispatch(\r\n          updateError({\r\n            techError: error.message,\r\n            descriptiveError: error.response.data.data,\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        let res = await update_item(`${formType}/${id}`, reqBody);\r\n      } catch (error) {\r\n        console.log(\"unsuccesful update Attempt \", error);\r\n        dispatch(\r\n          updateError({\r\n            techError: error.message,\r\n            descriptiveError: error.response.data.data,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async function sendMessage(body) {\r\n    try {\r\n      let res = await send_init_message({ agent_id: id });\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateError(error.message));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  const updateFormField = (field, value) => {\r\n    console.log(field, value);\r\n    let newFormData = [...formData];\r\n\r\n    newFormData = newFormData.map((f) => {\r\n      return { ...f, value: f.field === field ? value : f.value };\r\n    });\r\n\r\n    setFormData(newFormData);\r\n  };\r\n\r\n  const formView = formData.map((field, index) => {\r\n    return (\r\n      <Form.Group\r\n        as={Col}\r\n        md={6}\r\n        key={index}\r\n        className=\"mb-3\"\r\n        controlId=\"formBasicEmail\"\r\n      >\r\n        <Form.Label>{field.title}</Form.Label>\r\n        {/* #TODO: Document this*/}\r\n        {/* BIG TERNARY APPROACHING!!!!! */}\r\n        {field.type === \"checkbox\" ? (\r\n          <Form.Check\r\n            disabled={field.disabled}\r\n            checked={field.value ? true : false}\r\n            onChange={(e) => {\r\n              updateFormField(field.field, !field.value);\r\n            }}\r\n          />\r\n        ) : field.type === \"select\" ? (\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            disabled={field.options.length <= 0 || field.disabled}\r\n            value={field.value}\r\n            onChange={(e) => updateFormField(field.field, e.target.value)}\r\n          >\r\n            {field.options.map((elem) => {\r\n              return (\r\n                <option key={elem.id} value={elem.id}>\r\n                  {elem.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Select>\r\n        ) : (\r\n          <Form.Control\r\n            type={field.type}\r\n            placeholder={`Enter ${field.title}`}\r\n            value={field.value === null ? undefined : field.value}\r\n            required\r\n            disabled={field.disabled}\r\n            onChange={(e) => {\r\n              updateFormField(field.field, e.target.value);\r\n            }}\r\n          />\r\n        )}\r\n      </Form.Group>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <Form as={Row} onSubmit={onSubmit}>\r\n          {formView}\r\n          <Col md={6}>\r\n            <Button className=\"w-100\" variant=\"primary\" type=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Col>\r\n\r\n          {formType === \"agents\" ? (\r\n            <Col md={6}>\r\n              <Button\r\n                className=\"w-100\"\r\n                onClick={() => {\r\n                  sendMessage();\r\n                }}\r\n                variant=\"primary\"\r\n              >\r\n                Send Text Message\r\n              </Button>\r\n            </Col>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UpdateView from \"../../Components/UpdateView\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  get_emergency_details,\r\n  get_available_agents,\r\n  assign_agents,\r\n  update_emergency_form,\r\n  merge_emergencies,\r\n  set_emergency_note,\r\n  get_emergency_note,\r\n  get_backup_file,\r\n} from \"../../API/API\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  FormSelect,\r\n  Modal,\r\n  FormCheck,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport DataGridComponent from \"../../Components/DataGridComponent\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateError } from \"../../redux/errorInfoSlice\";\r\nimport { toggle } from \"../../redux/successInfoSlice\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AuthorityForm() {\r\n  const dispatch = useDispatch();\r\n  let { formType, id } = useParams();\r\n  const [emergencyDetails, changeEmergencyDetails] = useState();\r\n  const [availableAgents, setAvailableAgents] = useState();\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [assignedAgents, setAssignedAgents] = useState([]);\r\n  const [evidenceFiles, setEvidenceFiles] = useState([]);\r\n  const [emergencyFormDetails, changeEmergencyFormDetails] = useState();\r\n  const [view, setView] = useState(false);\r\n  const [note, setNote] = useState();\r\n  const [notes, setNotes] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(\"formType\", formType);\r\n    if (formType === \"emergencies\" && id) {\r\n      get_emergency_details(id).then((res) => {\r\n        console.log(res.data);\r\n        changeEmergencyDetails(res.data.data);\r\n        changeEmergencyFormDetails(res.data.data.emergency);\r\n        setAssignedAgents(res.data.data.assigned_agents);\r\n        setEvidenceFiles(res.data.data.emergency_files);\r\n      });\r\n      get_emergency_note(id).then((res) => {\r\n        setNotes(res.data.data);\r\n      });\r\n    } else if (formType === \"agents\" && id) {\r\n      setView(true);\r\n    }\r\n  }, []);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [showMerging, setShowMerging] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const saveNote = async () => {\r\n    try {\r\n      await set_emergency_note(id, note);\r\n      setNotes((prevValue) => {\r\n        return [...prevValue, { note }];\r\n      });\r\n      setNote(\"\");\r\n      dispatch(toggle());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateError(error.message));\r\n    }\r\n  };\r\n\r\n  const reverseBooleanField = (field, value) => {\r\n    let newVal = { ...emergencyFormDetails };\r\n    newVal[field] = !newVal[field];\r\n    console.log(\"new Val\", newVal);\r\n    changeEmergencyFormDetails(newVal);\r\n  };\r\n\r\n  const updateField = (field, value) => {\r\n    console.log(\"changing this \", field, value);\r\n    let newVal = { ...emergencyFormDetails };\r\n    newVal[field] = value;\r\n    console.log(\"new Val\", newVal);\r\n    changeEmergencyFormDetails(newVal);\r\n  };\r\n\r\n  const sendUpdateRequest = async () => {\r\n    try {\r\n      const res = await update_emergency_form(\r\n        emergencyFormDetails.id,\r\n        emergencyFormDetails\r\n      );\r\n      console.log(res);\r\n      dispatch(toggle());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateError(error.message));\r\n    }\r\n  };\r\n\r\n  const handleCloseMerging = () => setShowMerging(false);\r\n  const handleShowMerging = () => setShowMerging(true);\r\n\r\n  const assignAgents = async () => {\r\n    try {\r\n      let res = await assign_agents(id, selectedRows);\r\n      setAssignedAgents(res.data.data);\r\n      handleClose();\r\n      dispatch(toggle());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(updateError(error.message));\r\n    }\r\n  };\r\n  async function displayFile(e) {\r\n    axios({\r\n      url: `${process.env.REACT_APP_API_URL}/${e.s3_url}`, //your url\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"authToken\")\r\n          ? \"Bearer \" + localStorage.getItem(\"authToken\")\r\n          : \"\",\r\n      },\r\n      responseType: \"blob\", // important\r\n    }).then((response) => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", e.name); //or any other extension\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"authority__form__container\">\r\n      {/* #TODO: psudo routing here, so refactor this */}\r\n      {emergencyDetails ? (\r\n        <>\r\n          {/* assiging agents */}\r\n          <Modal\r\n            size=\"lg\"\r\n            dialogClassName=\"ultra__wide__modal\"\r\n            centered\r\n            show={show}\r\n            onHide={handleClose}\r\n          >\r\n            <Modal.Header className=\"modal__header__class\" closeButton>\r\n              <Modal.Title className=\"modal__title__class\">\r\n                Assign Agents\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              style={{\r\n                height: \"70vh\",\r\n                overflowY: \"scroll\",\r\n              }}\r\n            >\r\n              <div>\r\n                {/* alan's implementation of available agents */}\r\n                {/* <table\r\n                  style={{ border: \"1px solid #ebe9f1\" }}\r\n                  className=\"assigned__agents__table\"\r\n                >\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Occupation</th>\r\n                    <th>Phone</th>\r\n                    <th>Assigned</th>\r\n                  </tr>\r\n                  {availableAgents && availableAgents.length > 0\r\n                    ? availableAgents.map((agent, index) => (\r\n                        <tr key={index}>\r\n                          <td>{agent.first_name + \" \" + agent.last_name}</td>\r\n                          <td>{agent.agent_type_name}</td>\r\n                          <td>{agent.phone}</td>\r\n                          <td>\r\n                            <FormCheck></FormCheck>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    : null}\r\n                </table> */}\r\n              </div>\r\n              <DataGridComponent\r\n                table_name={\"available-agents\"}\r\n                selectedRows={selectedRows}\r\n                setSelectedRows={setSelectedRows}\r\n              ></DataGridComponent>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={assignAgents}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* Merging Emergencies */}\r\n          <Modal\r\n            size=\"lg\"\r\n            dialogClassName=\"ultra__wide__modal\"\r\n            centered\r\n            show={showMerging}\r\n            onHide={handleCloseMerging}\r\n          >\r\n            <Modal.Header className=\"modal__header__class\" closeButton>\r\n              <Modal.Title className=\"modal__title__class\">\r\n                Merge Emergencies, choose emergencies to combine\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body\r\n              style={{\r\n                height: \"70vh\",\r\n                overflowY: \"scroll\",\r\n              }}\r\n            >\r\n              <div>\r\n                {/* alan's implementation of available agents */}\r\n                {/* <table\r\n                  style={{ border: \"1px solid #ebe9f1\" }}\r\n                  className=\"assigned__agents__table\"\r\n                >\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Occupation</th>\r\n                    <th>Phone</th>\r\n                    <th>Assigned</th>\r\n                  </tr>\r\n                  {availableAgents && availableAgents.length > 0\r\n                    ? availableAgents.map((agent, index) => (\r\n                        <tr key={index}>\r\n                          <td>{agent.first_name + \" \" + agent.last_name}</td>\r\n                          <td>{agent.agent_type_name}</td>\r\n                          <td>{agent.phone}</td>\r\n                          <td>\r\n                            <FormCheck></FormCheck>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    : null}\r\n                </table> */}\r\n              </div>\r\n              <DataGridComponent\r\n                table_name={\"mergable-emergencies\"}\r\n                selectedRows={selectedRows}\r\n                setSelectedRows={setSelectedRows}\r\n                emergencyId={id}\r\n                disableOnRowSelect={true}\r\n              ></DataGridComponent>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"primary\"\r\n                // merge button\r\n                onClick={() => {\r\n                  try {\r\n                    // console.log(\"slice res\", selectedRows.slice(1));\r\n                    merge_emergencies(id, selectedRows);\r\n                    handleCloseMerging();\r\n                    dispatch(toggle());\r\n                  } catch (error) {\r\n                    console.log(error);\r\n                    dispatch(updateError(error.message));\r\n                  }\r\n                }}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Row className=\"mb-3\">\r\n            <Col lg={9}>\r\n              <div className=\"authority__card mb-3\">\r\n                <div className=\"mb-3 d-flex justify-content-between align-items-center\">\r\n                  <div className=\"authority__card__title\">\r\n                    Emergency Details\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                      style={{ marginRight: \"8px\" }}\r\n                      onClick={sendUpdateRequest}\r\n                    >\r\n                      Update Emergency\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        handleShowMerging();\r\n                      }}\r\n                      variant=\"primary\"\r\n                    >\r\n                      Merge Events\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__detail__info\">\r\n                    {emergencyDetails.emergency.description}\r\n                  </div>\r\n                </div>\r\n                <div className=\"\">\r\n                  <Row>\r\n                    <Col lg={12}>\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Reported Event\r\n                          </div>\r\n\r\n                          <div className=\"emergency__detail__label\">\r\n                            Emergency Type\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Reported By\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Reported At\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Latitude\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Longitude\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">Status</div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Is Active\r\n                          </div>\r\n                          <div className=\"emergency__detail__label\">\r\n                            Completed\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"emergency__detail__info\">\r\n                            {\r\n                              emergencyDetails.emergency_types.find(\r\n                                (emergency) =>\r\n                                  emergency.id ===\r\n                                  emergencyDetails.emergency.emergency_type_id\r\n                              ).name\r\n                            }\r\n                          </div>\r\n                          <div className=\"emergency__detail__info\">{id}</div>\r\n                          <div className=\"emergency__detail__info\">\r\n                            {emergencyDetails.reporting_user.name}\r\n                          </div>\r\n                          <div className=\"emergency__detail__info\">\r\n                            {emergencyDetails.reporting_user.created_at}\r\n                          </div>\r\n                          <div className=\"emergency__detail__info\">\r\n                            {emergencyDetails.emergency.latitude}\r\n                          </div>\r\n                          <div className=\"emergency__detail__info\">\r\n                            {emergencyDetails.emergency.longitude}\r\n                          </div>\r\n                          <Form.Select\r\n                            className=\"emergency__detail__select\"\r\n                            onChange={(e) => {\r\n                              updateField(\"status\", e.target.value);\r\n                            }}\r\n                            value={\r\n                              emergencyFormDetails\r\n                                ? emergencyFormDetails.status\r\n                                : undefined\r\n                            }\r\n                          >\r\n                            {emergencyDetails.available_statuses.map(\r\n                              (elem, index) => {\r\n                                return (\r\n                                  <option key={nanoid()} value={elem}>\r\n                                    {elem}\r\n                                  </option>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </Form.Select>\r\n                          <Form.Check\r\n                            checked={\r\n                              emergencyFormDetails &&\r\n                              emergencyFormDetails.is_active\r\n                                ? true\r\n                                : undefined\r\n                            }\r\n                            className=\"emergency__detail__select\"\r\n                            onChange={(e) => {\r\n                              reverseBooleanField(\"is_active\", e.target.value);\r\n                            }}\r\n                          ></Form.Check>\r\n                          <Form.Check\r\n                            checked={\r\n                              emergencyFormDetails &&\r\n                              emergencyFormDetails.completed\r\n                                ? true\r\n                                : undefined\r\n                            }\r\n                            className=\"emergency__detail__select\"\r\n                            onChange={(e) => {\r\n                              reverseBooleanField(\"completed\", e.target.value);\r\n                            }}\r\n                          ></Form.Check>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <div className=\"authority__card\">\r\n                <div className=\"authority__card__title mb-2\">Notes</div>\r\n                <div className=\"mb-2\">\r\n                  {notes\r\n                    ? notes.map((note, index) => <div>{note.note}</div>)\r\n                    : null}\r\n                </div>\r\n                <textarea\r\n                  onChange={(e) => {\r\n                    setNote(e.target.value);\r\n                  }}\r\n                  value={note}\r\n                  className=\"w-100 general__mobile__input mb-2\"\r\n                  style={{ minHeight: \"140px\" }}\r\n                />\r\n                <Button onClick={() => saveNote()} className=\"w-100\">\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg={7}>\r\n              <div className=\"authority__card mb-3 p-0\">\r\n                <div className=\"mb-3 p-3 d-flex justify-content-between\">\r\n                  <div className=\"authority__card__title\">Assigned Agents</div>\r\n                  <Button onClick={handleShow} variant=\"primary\">\r\n                    Add Agents\r\n                  </Button>\r\n                </div>\r\n\r\n                <table className=\"assigned__agents__table\">\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Type</th>\r\n                  </tr>\r\n                  <tbody>\r\n                    {assignedAgents.map((a) => {\r\n                      return (\r\n                        <tr key={a.id}>\r\n                          <td>{a.id}</td>\r\n                          <td>\r\n                            {a.first_name} {a.last_name}\r\n                          </td>\r\n                          <td>{a.type}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n            <Col lg={5}>\r\n              <div className=\"authority__card mb-3 p-0\">\r\n                <div className=\"d-flex justify-content-between p-3 mb-3\">\r\n                  <div className=\"authority__card__title\">Evidence Files</div>\r\n                </div>\r\n\r\n                <table className=\"assigned__agents__table\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Extension</th>\r\n                  </tr>\r\n                  <tbody>\r\n                    {evidenceFiles.map((e) => (\r\n                      <tr\r\n                        key={e.id}\r\n                        onClick={() => {\r\n                          displayFile(e);\r\n                        }}\r\n                      >\r\n                        <td>{e.id}</td>\r\n                        <td>{e.name}</td>\r\n                        <td>{e.type}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : view ? (\r\n        <div className=\"authority__card\">\r\n          <UpdateView formType={formType} id={id}></UpdateView>\r\n        </div>\r\n      ) : (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { get_chatrooms } from \"../../API/API\";\r\n\r\nexport default function ChatList() {\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  let path = location.pathname.split(\"/\");\r\n  let appletName = path[1];\r\n  const [emergencies, setEmergencies] = useState([]);\r\n  // @TODO: Refactor this\r\n  useEffect(() => {\r\n    (async () => {\r\n      let request = await get_chatrooms(\"authorities/chat_rooms\");\r\n      setEmergencies(request.data.data);\r\n      console.log(request.data.data);\r\n    })();\r\n  }, []);\r\n\r\n  console.log(\"chatList\", emergencies);\r\n  let emergenciesArray = emergencies.map((emergency) => {\r\n    return (\r\n      <div\r\n        className=\"messages__row__container\"\r\n        key={emergency.id}\r\n        onClick={(e) => {\r\n          navigate(`chatroom/${emergency.id}`);\r\n        }}\r\n      >\r\n        <div className=\"messages__row__avatar\"># {emergency.id}</div>\r\n        <div className=\"messages__row__right\">\r\n          <div className=\"messages__row__label\">{`${emergency.agent_name}`}</div>\r\n          <div className=\"messages__row__message\">{emergency.description}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard__container\">\r\n      <div className=\"text-center mb-4\">\r\n        <h1\r\n          className=\"general__mobile__title mx-3\"\r\n          style={{ fontSize: \"1.35rem\" }}\r\n        >\r\n          Chat Rooms\r\n        </h1>\r\n      </div>\r\n      {emergenciesArray}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { get_authority_messages, send_authority_message } from \"../../API/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { pusher } from \"../../Pages/Login\";\r\n\r\nexport default function AuthorityChatroom() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [paginatationData, setPaginatationData] = useState({\r\n    page: 1,\r\n    perPage: 0,\r\n    total: 0,\r\n  });\r\n  // get user info from redux store\r\n  const userInfo = useSelector((state) => state.userInfo.value);\r\n  useEffect(() => {\r\n    try {\r\n      const channel = pusher.subscribe(`private-agent-chat.${chatroom_id}`);\r\n      channel.bind(\"message\", (data) => {\r\n        console.log(\"I got called\", data);\r\n        appendMsg(data.user.id, data.chatMessage.message, data.user.name);\r\n      });\r\n      console.log(pusher);\r\n    } catch (error) {\r\n      console.log(error);\r\n      navigate(\"/\");\r\n    }\r\n\r\n    return () => {\r\n      if (pusher) {\r\n        pusher.unsubscribe(`chat.${chatroom_id}`);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  let { chatroom_id } = useParams();\r\n\r\n  function appendMsg(userId, message, name) {\r\n    setMessages((prevValue) => [\r\n      { user_id: userId, message, user_name: name },\r\n      ...prevValue,\r\n    ]);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    send_authority_message(chatroom_id, { message });\r\n    // commented for now, duplicate messages\r\n    //appendMsg(userInfo.name, message);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // declare the data fetching function\r\n    (async () => {\r\n      try {\r\n        let res = await get_authority_messages(chatroom_id);\r\n        res = res.data.data;\r\n        console.log(res);\r\n        setMessages(res.data);\r\n        setPaginatationData({\r\n          page: res.current_page,\r\n          perPage: res.per_page,\r\n          total: res.total,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  async function fetchMoreData() {\r\n    let newParams = {\r\n      ...paginatationData,\r\n      page: paginatationData.page + 1,\r\n    };\r\n    try {\r\n      let res = await get_authority_messages(chatroom_id, newParams);\r\n      res = res.data.data;\r\n      console.log(res);\r\n      setMessages([...messages, ...res.data]);\r\n      setPaginatationData({\r\n        page: res.current_page,\r\n        perPage: res.per_page,\r\n        total: res.total,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"dashboard__container d-flex flex-column\">\r\n      <div className=\"chatroom__header__container d-flex justify-content-between align-items-center\">\r\n        <i\r\n          onClick={() => navigate(-1)}\r\n          style={{ fontSize: \"1.15rem\" }}\r\n          class=\"bi bi-chevron-left\"\r\n        ></i>\r\n        <h1\r\n          className=\"general__mobile__title mb-0\"\r\n          style={{ \"font-size\": \"1.35rem\" }}\r\n        >\r\n          Authority Chatroom {chatroom_id}\r\n        </h1>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"chatroom__container pb-0\">\r\n        <div\r\n          id=\"scrollableDiv\"\r\n          style={{\r\n            overflow: \"scroll\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flex: \"1\",\r\n          }}\r\n        >\r\n          <InfiniteScroll\r\n            dataLength={messages.length}\r\n            next={fetchMoreData}\r\n            className=\"chat__room__container\"\r\n            style={{ display: \"flex\", flexDirection: \"column-reverse\" }} //To put endMessage and loader to the top.\r\n            hasMore={messages.length < paginatationData.total}\r\n            loader={<h4>Loading...</h4>}\r\n            scrollableTarget=\"scrollableDiv\"\r\n            inverse={true}\r\n          >\r\n            {messages.map((msg, index) => (\r\n              <div\r\n                className={\r\n                  msg.user_id === userInfo.id\r\n                    ? \"message__right__side\"\r\n                    : \"message__left__side\"\r\n                }\r\n                key={index}\r\n              >\r\n                <div\r\n                  className={\r\n                    msg.user_id === userInfo.id\r\n                      ? \"d-none\"\r\n                      : \"message__username__label\"\r\n                  }\r\n                >\r\n                  {msg.user_name}:\r\n                </div>\r\n                {`${msg.message}`}\r\n              </div>\r\n            ))}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n      <Form style={{ padding: \"12px\" }} onSubmit={onSubmit}>\r\n        <Form.Group\r\n          className=\"d-flex align-items-center\"\r\n          controlId=\"formBasicPassword\"\r\n        >\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            className=\"chat__message__input\"\r\n            placeholder=\"Enter your Msg here\"\r\n            value={message}\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n          />\r\n          <Button type=\"submit\" className=\"message__send__button\">\r\n            <i class=\"bi bi-send-fill\"></i>\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { get_agent_emergency_details } from \"../../API/API\";\r\n\r\nexport default function EmergencyAssignment() {\r\n  const [emergencyDetails, setEmergencyDetails] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let res = await get_agent_emergency_details();\r\n        setEmergencyDetails(res.data.data);\r\n        console.log(res.data.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const isImage = (url) => {\r\n    return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\r\n  };\r\n  const isVideo = (url) => {\r\n    return /\\.(mp4|mov|wmv|avi|mkv|webm|flv)$/.test(url);\r\n  };\r\n  const isAudio = (url) => {\r\n    return /\\.(m4a|flac|mp3|wav|wma|aac)$/.test(url);\r\n  };\r\n\r\n  // let allFiles = emergencyDetails.files.map((files, index) => {\r\n  //   // format the files here!!!\r\n  // });\r\n  // let notesVeiw = emergencyDetails.notes.map((note, index) => {\r\n  //   return (\r\n  //     <>\r\n  //       <div key={index}>{note}</div>\r\n  //     </>\r\n  //   );\r\n  // });\r\n  return (\r\n    <>\r\n      {emergencyDetails ? (\r\n        <div className=\"emergency__assignment__container\">\r\n          <div className=\"text-center mb-4\">\r\n            <h1\r\n              className=\"general__mobile__title mx-3\"\r\n              style={{ \"font-size\": \"1.35rem\" }}\r\n            >\r\n              Current Assignment\r\n            </h1>\r\n          </div>\r\n          <div className=\"media__area__container mb-3\">\r\n            {emergencyDetails &&\r\n            emergencyDetails.files &&\r\n            emergencyDetails.files.length > 0\r\n              ? emergencyDetails.files.map((file, index) => {\r\n                  if (isImage(file.url)) {\r\n                    return (\r\n                      <div\r\n                        className=\"media__content__holder d-flex justify-content-center\"\r\n                        key={index}\r\n                      >\r\n                        <img\r\n                          src={process.env.REACT_APP_API_URL + \"/\" + file.url}\r\n                          className=\"h-100\"\r\n                        ></img>\r\n                      </div>\r\n                    );\r\n                  } else if (isVideo(file.url)) {\r\n                    return (\r\n                      <div\r\n                        className=\"media__content__holder d-flex justify-content-center\"\r\n                        key={index}\r\n                      >\r\n                        <video\r\n                          autoPlay={true}\r\n                          loop={true}\r\n                          controls={true}\r\n                          src={process.env.REACT_APP_API_URL + \"/\" + file.url}\r\n                          className=\"h-100\"\r\n                        ></video>\r\n                      </div>\r\n                    );\r\n                  } else if (isAudio(file.url)) {\r\n                    return (\r\n                      <div\r\n                        className=\"media__content__holder d-flex flex-column align-items-center pb-2 justify-content-between\"\r\n                        key={index}\r\n                      >\r\n                        <div></div>\r\n                        <i\r\n                          style={{ fontSize: \"4rem\" }}\r\n                          className=\"bi bi-volume-up-fill\"\r\n                        ></i>\r\n                        <audio\r\n                          autoPlay={true}\r\n                          loop={true}\r\n                          controls={true}\r\n                          src={process.env.REACT_APP_API_URL + \"/\" + file.url}\r\n                        ></audio>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })\r\n              : null}{\" \"}\r\n          </div>\r\n          {emergencyDetails ? (\r\n            <div>\r\n              <div className=\"emergency__type__label mb-4\">\r\n                {emergencyDetails.emergency_type}\r\n              </div>\r\n              <div className=\"mb-3 d-flex align-items-start\">\r\n                <div className=\"emergency__info__icon\">\r\n                  <i className=\"bi bi-file-earmark-text-fill\"></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__info__label\">Description</div>\r\n                  <div> {emergencyDetails.description}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3 d-flex align-items-start\">\r\n                <div className=\"emergency__info__icon\">\r\n                  <i className=\"bi bi-person-fill\"></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__info__label\">Reported By</div>\r\n                  <div> {emergencyDetails.reported_by}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3 d-flex align-items-start\">\r\n                <div className=\"emergency__info__icon\">\r\n                  <i className=\"bi bi-telephone-fill\"></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__info__label\">Phone Number</div>\r\n                  <div> {emergencyDetails.phone_number}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3 d-none align-items-start\">\r\n                <div className=\"emergency__info__icon\">\r\n                  <i className=\"bi bi-geo-alt-fill\"></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__info__label\">Event Location</div>\r\n                  <div>\r\n                    {emergencyDetails.latitude} lat -{\" \"}\r\n                    {emergencyDetails.longitude} long\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-3 d-flex align-items-start\">\r\n                <div className=\"emergency__info__icon\">\r\n                  <i className=\"bi bi-stickies-fill\"></i>\r\n                </div>\r\n                <div>\r\n                  <div className=\"emergency__info__label\">Notes</div>\r\n                  <div>\r\n                    {emergencyDetails.notes && emergencyDetails.notes.length > 0\r\n                      ? emergencyDetails.notes.map((note, index) => (\r\n                          <div key={index}>{note.note}</div>\r\n                        ))\r\n                      : \"-\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center text-center\">\r\n                <a\r\n                  className=\"emergency__map__link\"\r\n                  href={`https://maps.google.com/?q=${emergencyDetails.latitude},${emergencyDetails.longitude}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  Go to Map\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <div className=\"emergency__assignment__container text-center d-flex flex-column justify-content-center mx-4\">\r\n          <img\r\n            className=\"unassigned__agent__image\"\r\n            src=\"https://img.freepik.com/free-vector/reading-book-concept-illustration_114360-8612.jpg?t=st=1656281106~exp=1656281706~hmac=836798acd3586ee2d9979723a6fbbb06365000184a6f442515eda2b13a888534&w=1380\"\r\n            alt=\"\"\r\n          />\r\n          <h1\r\n            className=\"general__mobile__title\"\r\n            style={{ \"font-size\": \"1.25rem\" }}\r\n          >\r\n            Agent Not Assigned\r\n          </h1>\r\n          <p className=\"general__mobile__subtitle\">\r\n            Agent is currently not assigned to do any task\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Container, Nav, Button, Modal } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, Outlet, useNavigate } from \"react-router-dom\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport {\r\n  bulk_delete,\r\n  create_backup,\r\n  get_backup_file,\r\n  get_table_list,\r\n} from \"../../API/API\";\r\nimport DataGridComponent from \"../../Components/DataGridComponent\";\r\nimport { toggle } from \"../../redux/successInfoSlice\";\r\n\r\nexport default function AdminDashboard() {\r\n  const [tableList, setTableList] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [tableName, setTableName] = useOutletContext();\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let res = await get_table_list();\r\n      setTableList(\r\n        res.data.data.map((table, index) => {\r\n          console.log(table);\r\n          return (\r\n            <Nav.Link\r\n              key={index}\r\n              onClick={() => {\r\n                setTableName(table.name);\r\n              }}\r\n            >\r\n              {`${table.name}`}\r\n            </Nav.Link>\r\n          );\r\n        })\r\n      );\r\n    })();\r\n  }, []);\r\n\r\n  async function backup() {\r\n    try {\r\n      let res = await create_backup();\r\n      await get_backup_file(res.data.data.fileName);\r\n    } catch (error) {}\r\n  }\r\n  return (\r\n    <div className=\"dashboard__container\">\r\n      <div className=\"authority__card card__height\">\r\n        <div className=\"d-flex align-items-center mb-3 justify-content-between\">\r\n          <div className=\"authority__card__title\">\r\n            {tableName ? tableName.toUpperCase() : null}\r\n          </div>\r\n          <div>\r\n            <Button onClick={backup}>Backup DB</Button>\r\n\r\n            {/* dont show the create-delete buttons bcz available agents is not a real table. it is a filtered one */}\r\n            {tableName === \"available-agents\" ? (\r\n              <></>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  style={{ marginLeft: \"8px\", marginRight: \"8px\" }}\r\n                  onClick={(e) => {\r\n                    navigate(`form/${tableName}/create_form`);\r\n                  }}\r\n                >\r\n                  Create\r\n                </Button>\r\n                <Button\r\n                  onClick={async (e) => {\r\n                    try {\r\n                      let res = await bulk_delete(tableName, selectedRows);\r\n                      dispatch(toggle());\r\n                    } catch (error) {\r\n                      console.log(\"delete operation failed\", error);\r\n                    }\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Button>{\" \"}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {tableName && (\r\n          <DataGridComponent\r\n            table_name={tableName}\r\n            selectedRows={selectedRows}\r\n            setSelectedRows={setSelectedRows}\r\n          ></DataGridComponent>\r\n        )}\r\n      </div>\r\n\r\n      <Modal\r\n        show={showModal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Backup Status\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Centered Modal</h4>\r\n          <p>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UpdateView from \"../../Components/UpdateView\";\r\n\r\nexport default function AdminForm() {\r\n  let { formType, id } = useParams();\r\n  return (\r\n    <div className=\"authority__form__container\">\r\n      <div className=\"authority__card\">\r\n        <h3>{formType}</h3>\r\n        <UpdateView formType={formType} id={id}></UpdateView>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport AdminApp from \"./Admin-app/AdminApp\";\nimport AgentApp from \"./Agent-app/AgentApp\";\nimport AuthoritiesApp from \"./Authorities-app/AuthoritiesApp\";\nimport Login from \"./Pages/Login\";\nimport Page404 from \"./Pages/Page404\";\n\n// User App pages\nimport Chat from \"./Pages/Chat\";\nimport Profile from \"./User-app/Pages/Profile\";\nimport Register from \"./User-app/Pages/Register\";\nimport Report from \"./User-app/Pages/Report\";\nimport SmsVerify from \"./User-app/Pages/SmsVerify\";\nimport UserApp from \"./User-app/UserApp\";\n\n// Authorities App pages\nimport CallHelp from \"./User-app/Pages/CallHelp\";\nimport Chatroom from \"./Pages/Chatroom\";\nimport MainWrapper from \"./Pages/MainWrapper\";\nimport Dashboard from \"./Authorities-app/Pages/Dashboard\";\nimport AuthorityForm from \"./Authorities-app/Pages/AuthorityForm\";\nimport ChatList from \"./Authorities-app/Pages/ChatList\";\nimport AuthorityChatroom from \"./Authorities-app/Pages/AuthorityChatroom\";\n\n// Agent App Pages\nimport EmergencyAssignment from \"./Agent-app/pages/EmergencyAssignment\";\n\n// Admin App Pages\nimport AdminDashboard from \"./Admin-app/pages/AdminDashboard\";\nimport AdminForm from \"./Admin-app/pages/AdminForm\";\n\nfunction App() {\n  useEffect(() => {\n    console.log(\"App rerendered\");\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter basename=\"/emergency-frontend\">\n        <Routes>\n          <Route path=\"/\" element={<MainWrapper></MainWrapper>}>\n            <Route index element={<Login />}></Route>\n            <Route path=\"login\" element={<Login />}></Route>\n            <Route path=\"register\" element={<Register></Register>}></Route>\n            <Route\n              path=\"user/sms-verify/:request_id/:id\"\n              element={<SmsVerify></SmsVerify>}\n            ></Route>\n            <Route path=\"user\" element={<UserApp />}>\n              <Route index element={<Report></Report>}></Route>\n              <Route path=\"profile\" element={<Profile></Profile>}></Route>\n              <Route path=\"call-help\" element={<CallHelp />}></Route>\n              <Route path=\"chat\" element={<Chat></Chat>}></Route>\n              <Route\n                path=\"chat/chatroom/:chatroom_id\"\n                element={<Chatroom></Chatroom>}\n              ></Route>\n              <Route path=\"*\" element={<Page404></Page404>}></Route>\n            </Route>\n            <Route path=\"agent\" element={<AgentApp />}>\n              <Route\n                index\n                element={<EmergencyAssignment></EmergencyAssignment>}\n              ></Route>\n              <Route path=\"profile\" element={<Profile></Profile>}></Route>\n              <Route path=\"report\" element={<Report />}></Route>\n              <Route path=\"chat\" element={<Chat></Chat>}></Route>\n              <Route\n                path=\"chat/chatroom/:chatroom_id\"\n                element={<Chatroom></Chatroom>}\n              ></Route>\n              <Route path=\"*\" element={<Page404></Page404>}></Route>\n            </Route>\n            <Route path=\"authority\" element={<AuthoritiesApp />}>\n              <Route index element={<Dashboard></Dashboard>}></Route>\n              {/* if id is \"create\" is will fetch the create form request otherwise, update the user with that id */}\n              <Route\n                path=\"form/:formType/:id\"\n                element={<AuthorityForm></AuthorityForm>}\n              ></Route>\n              <Route path=\"chatList\" element={<ChatList></ChatList>}></Route>\n              <Route\n                path=\"chatList/chatroom/:chatroom_id\"\n                element={<AuthorityChatroom></AuthorityChatroom>}\n              ></Route>\n            </Route>\n            <Route path=\"admin\" element={<AdminApp />}>\n              <Route index element={<AdminDashboard></AdminDashboard>}></Route>\n              <Route\n                path=\"form/:formType/:id\"\n                element={<AdminForm></AdminForm>}\n              ></Route>\n            </Route>\n            <Route path=\"*\" element={<Page404></Page404>}></Route>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// implementation here: https://dev.to/dawnind/persist-redux-state-with-redux-persist-3k0d\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport errorInfoSlice from \"./errorInfoSlice\";\r\nimport userInfoSlice from \"./userInfoSlice\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport successInfoSlice from \"./successInfoSlice\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  errorInfo: errorInfoSlice,\r\n  userInfo: userInfoSlice,\r\n  successInfo: successInfoSlice,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\n// export default configureStore({\r\n//   reducer: {\r\n//     errorInfo: errorInfoSlice,\r\n//     userInfo: userInfoSlice,\r\n//   },\r\n// });\r\n\r\nexport default configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./styles.css\";\nimport \"./css/main.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// learned how to do the PWA thing from https://www.codica.com/blog/how-to-create-pwa-with-react/#step-1-set-up-a-simple-react-app\n\n// remember that pwa only works in built mode i.e. you have to build the app to see it working\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}